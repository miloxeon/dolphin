{"version":3,"sources":["webpack:///webpack/bootstrap 50567cf23062ef325ab8","webpack:///./lib/toolkit/common.js","webpack:///./js/base.js","webpack:///./lib/toolkit/elements.js","webpack:///./lib/toolkit/geometry.js","webpack:///./lib/toolkit/lines.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;AChEA;;AAEA;AACA;AACA;;;;;;;;;;;ACJA;;AAE4F;AAC9C;;AAE9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS,eAAe;AACxB;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,EAAE;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClYA;;AAEgB;AAC+C;;AAE/D;;AAEA;AACA;;AAEA;AACA;;AAEA,4CAA4C;AAC5C;AACA;;AAEA;;AAEA;;AAEA;;AAEA,gHAAyC;AACzC;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gCAAgC;;AAEhC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA,6B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;;;;;;;;;ACnMA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,qEAAqE;AACrE,sEAAsE;AACtE,sEAAsE;AACtE,uEAAuE;;AAEvE;;AAEA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;;AAEA;;AAEA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA,EAAE;AACF;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,GAAG;AACH;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9GA;;AAEgB;;AAEhB;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC;;AAEhC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 50567cf23062ef325ab8","'use strict';\r\n\r\nexport function getHash() {\r\n\treturn Math.floor(Math.random() * new Date()).toString();\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/toolkit/common.js\n// module id = 0\n// module chunks = 0","'use strict';\r\n\r\nimport {createElement, connectElements, computeRectSize, computeTextPosition, createAddress} from '../lib/toolkit/elements';\r\nimport {defineRelativePosition, checkIfInside} from '../lib/toolkit/geometry';\r\n\r\nvar diagram = SVG('diagram');\r\n\r\nvar custom_theme = {\r\n\tborder_color: 'pink',\r\n\tcolor: 'white',\r\n\tfont_family: 'Comic Sans',\r\n\tfont_size: 14,\r\n\tfont_style: 'italic',\r\n\ttext_align: 'center',\r\n\tbackground_color: 'pink'\r\n};\r\n\r\nvar blueprints = [\r\n\t{\r\n\t\tposition: [150, 90],\r\n\t\ttext: 'Harder, Ivan',\r\n\t\ttheme: custom_theme\r\n\t},\r\n\t{\r\n\t\tposition: [450, 100],\r\n\t\ttext: 'Lorem ipsum dolor sit amet consectetur. Cras sodales imperdiet auctor.'\r\n\t}\r\n];\r\n\r\nvar custom_line_style = {\r\n\t'stroke': 'red',\r\n\t'stroke-width': '3',\r\n\t'stroke-dasharray': '1,5'\r\n}\r\n\r\nvar connections = [\r\n\t{\r\n\t\tfrom: [50, 50],\r\n\t\tto: [100, 100],\r\n\t\ttype: {type: 'simple'},\r\n\t\tstyle: custom_line_style\r\n\t},\r\n\t{\r\n\t\tfrom: [70, 50],\r\n\t\tto: [100, 120]\r\n\t}\r\n];\r\n\r\n\r\nvar rendered_elements = blueprints.map(function (blueprint) {\r\n\tvar element = _drawElement(createElement(blueprint));\r\n\telement.snapshot.draggy();\r\n\treturn element;\r\n});\r\n\r\nvar sockets = defineSockets(rendered_elements[0], rendered_elements[1]);\r\n\r\nvar rendered_connection = _drawConnection(connectElements({\r\n\tfrom: createAddress(rendered_elements[0], sockets[0]),\r\n\tto: createAddress(rendered_elements[1], sockets[1]),\r\n\tstyle: custom_line_style\r\n}))\r\n\r\nrendered_elements.forEach(function (element) {\r\n\telement.snapshot.on('dragmove', function () {\r\n\t\tif (rendered_connection) {\r\n\t\t\t_destroyConnection(rendered_connection);\r\n\t\t}\r\n\r\n\t\tvar sockets = defineSockets(rendered_elements[0], rendered_elements[1]);\r\n\r\n\t\tif (sockets.length > 0) {\r\n\r\n\t\t\trendered_connection = _drawConnection(connectElements({\r\n\t\t\t\tfrom: createAddress(rendered_elements[0], sockets[0]),\r\n\t\t\t\tto: createAddress(rendered_elements[1], sockets[1]),\r\n\t\t\t\tstyle: custom_line_style,\r\n\t\t\t\ttype: {\r\n\t\t\t\t\troughness: 'soft'\r\n\t\t\t\t}\r\n\t\t\t}))\r\n\t\t}\r\n\t});\r\n});\r\n\r\nfunction defineSockets(rendered_element_1, rendered_element_2) {\r\n\tvar decision_matrix = {\r\n\t\t'1': '24',\r\n\t\t'2': '54',\r\n\t\t'3': '54',\r\n\t\t'4': '74',\r\n\t\t'5': '75',\r\n\t\t'6': '45',\r\n\t\t'7': '45',\r\n\t\t'8': '25',\r\n\r\n\t\t'12': '24',\r\n\t\t'23': '54',\r\n\t\t'34': '74',\r\n\t\t'45': '72',\r\n\t\t'56': '75',\r\n\t\t'67': '45',\r\n\t\t'78': '25',\r\n\t\t'18': '27',\r\n\r\n\t\t'123': '54',\r\n\t\t'234': '54',\r\n\t\t'345': '72',\r\n\t\t'456': '72',\r\n\t\t'567': '45',\r\n\t\t'678': '45',\r\n\t\t'178': '27',\r\n\t\t'128': '27',\r\n\r\n\t\t'1234': '54',\r\n\t\t'2345': '',\t\t//overlaps are empty (no line required)\r\n\t\t'3456': '72',\r\n\t\t'4567': '',\r\n\t\t'5678': '45',\r\n\t\t'1678': '',\r\n\t\t'1278': '27',\r\n\t\t'1238': ''\r\n\t}\r\n\r\n\tvar sockets = decision_matrix[defineRelativePosition(rendered_element_2, rendered_element_1)];\r\n\tvar is_overlap = checkOverlap(rendered_element_1, rendered_element_2);\r\n\r\n\tif (is_overlap) {\r\n\t\treturn [];\r\n\t} else {\r\n\t\treturn sockets ? sockets.split('').reverse() : [];\r\n\t}\r\n}\r\n\r\nfunction checkOverlap(rendered_element_1, rendered_element_2) {\r\n\tvar bbox_1 = rendered_element_1.tester();\r\n\tvar bbox_2 = rendered_element_2.tester();\r\n\r\n\treturn checkIfInside(rendered_element_1, [bbox_2.x, bbox_2.y]) || \r\n\t\tcheckIfInside(rendered_element_1, [bbox_2.x2, bbox_2.y]) || \r\n\t\tcheckIfInside(rendered_element_1, [bbox_2.x, bbox_2.y2]) || \r\n\t\tcheckIfInside(rendered_element_1, [bbox_2.x2, bbox_2.y2]) ||\r\n\r\n\t\tcheckIfInside(rendered_element_2, [bbox_1.x, bbox_1.y]) || \r\n\t\tcheckIfInside(rendered_element_2, [bbox_1.x2, bbox_1.y]) || \r\n\t\tcheckIfInside(rendered_element_2, [bbox_1.x, bbox_1.y2]) || \r\n\t\tcheckIfInside(rendered_element_2, [bbox_1.x2, bbox_1.y2]);\r\n\r\n}\r\n\r\nfunction _drawConnection(virtual_connection) {\r\n\tvar from = virtual_connection.from;\r\n\tvar to = virtual_connection.to;\r\n\r\n\tif (virtual_connection.type.shape && virtual_connection.type.shape == 'arc') {\r\n\r\n\t\tif (virtual_connection.from[0] <= virtual_connection.to[0]) {\r\n\t\t\tvar direction = 'normal';\r\n\t\t} else {\r\n\t\t\tvar direction = 'reverse';\r\n\t\t}\r\n\t\tvar pos1 = virtual_connection.to;\r\n\t\tvar pos2 = virtual_connection.from;\r\n\r\n\t\tvar line = _arcTo(pos1, pos2).attr(virtual_connection.style);\r\n\r\n\t} else {\r\n\r\n\t\tif (virtual_connection.from[0] <= virtual_connection.to[0]) {\r\n\t\t\tvar direction = 'normal';\r\n\t\t\tvar pos1 = virtual_connection.from;\r\n\t\t\tvar pos2 = virtual_connection.to;\r\n\r\n\t\t} else {\r\n\t\t\tvar direction = 'reverse';\r\n\t\t\tvar pos1 = virtual_connection.to;\r\n\t\t\tvar pos2 = virtual_connection.from;\r\n\t\t}\r\n\t\tvar line = _cubicTo(pos1, pos2).attr(virtual_connection.style);\r\n\t}\r\n\r\n\treturn {\r\n\t\tblueprint: virtual_connection.blueprint,\r\n\t\torigin: virtual_connection,\r\n\t\tsnapshot: line,\r\n\t\ttester: _generateTestMethods(line)\r\n\t}\r\n}\r\n\r\nfunction _apply_params(element, params) {\r\n\treturn element.attr(params);\r\n}\r\n\r\nfunction _arcTo(from, to, style) {\r\n\r\n\tvar x_between_from_and_to = from[0] + Math.abs(from[0] - to[0]) / 2;\r\n\r\n\tvar bias = [\r\n\t\tfrom[0],\r\n\t\tto[1]\r\n\t];\r\n\r\n\treturn _cubic(from, to, bias, bias);\r\n}\r\n\r\nfunction _cubicTo(from, to) {\r\n\r\n\tvar x_between_from_and_to = from[0] + Math.abs(from[0] - to[0]) / 2;\r\n\r\n\tvar bias_1 = [\r\n\t\tx_between_from_and_to,\r\n\t\tfrom[1]\r\n\t];\r\n\r\n\tvar bias_2 = [\r\n\t\tx_between_from_and_to,\r\n\t\tto[1]\r\n\t];\r\n\r\n\treturn _cubic(from, to, bias_1, bias_2);\r\n}\r\n\r\nfunction _cubic(from, to, bias_1, bias_2) {\r\n\treturn diagram.path(\r\n\t\t'M ' + \r\n\t\tfrom[0].toString() + ' ' + \r\n\t\tfrom[1].toString() + ' ' + \r\n\t\t'C ' +\r\n\t\tbias_1[0].toString() + ' ' + \r\n\t\tbias_1[1].toString() + ' ' +\r\n\t\tbias_2[0].toString() + ' ' + \r\n\t\tbias_2[1].toString() + \r\n\t\t' ' + \r\n\t\tto[0].toString() + ' ' + \r\n\t\tto[1].toString()\r\n\t);\r\n}\r\n\r\nfunction _destroyConnection(rendered_connection) {\r\n\trendered_connection.snapshot.remove();\r\n}\r\n\r\nfunction createConnection (connection_blueprint) {\r\n\tvar id = 'connection_' + Math.floor(Math.random() * new Date()).toString();\r\n\t\r\n\tif (connection_blueprint.from && connection_blueprint.to) {\r\n\t\tvar from = connection_blueprint.from;\r\n\t\tvar to = connection_blueprint.to;\r\n\t} else {\r\n\t\t// error\r\n\t}\r\n\r\n\tvar type = checkConnectionType(connection_blueprint.type);\r\n\r\n\tvar blueprint_style = connection_blueprint.style || {};\r\n\r\n\tvar default_style = {\r\n\t\t'stroke': 'black',\r\n\t\t'stroke-width': '2',\r\n\t\t'fill': 'none',\r\n\t\t'stroke-linecap': 'round',\r\n\t\t'stroke-dasharray': 'none'\r\n\t}\r\n\r\n\tvar style = {\r\n\t\t'stroke': blueprint_style['stroke'] || default_style['stroke'],\r\n\t\t'stroke-width': blueprint_style['stroke-width'] || default_style['stroke-width'],\r\n\t\t'fill': blueprint_style['fill'] || default_style['fill'],\r\n\t\t'stroke-linecap': blueprint_style['stroke-linecap'] || default_style['stroke-linecap'],\r\n\t\t'stroke-dasharray': blueprint_style['stroke-dasharray'] || default_style['stroke-dasharray']\r\n\t}\r\n\r\n\treturn {\r\n\t\tid: id,\r\n\t\ttype: type,\r\n\t\tfrom: from,\r\n\t\tto: to,\r\n\t\tstyle: style,\r\n\t\tblueprint: connection_blueprint\r\n\t}\r\n}\r\n\r\n\r\nfunction _drawElement(virtual_element) {\r\n\t// init element\r\n\tvar element = diagram.group();\r\n\r\n\t// create text and rect\r\n\tvar element_text = element.text(virtual_element.text.text)\r\n\t\t.font(virtual_element.style.text_style);\r\n\r\n\tvar rect_size = computeRectSize(element_text, virtual_element);\r\n\r\n\tvar element_rect = element.rect(rect_size[0], rect_size[1])\r\n\t\t.attr(virtual_element.style.rect_style);\r\n\r\n\r\n\t// position everything\r\n\telement_text.front();\r\n\r\n\tvar position = virtual_element.position;\r\n\telement.move(position[0], position[1]);\r\n\r\n\tvar text_position = computeTextPosition(element_text, virtual_element);\r\n\telement_text.move(text_position[0], text_position[1]);\r\n\r\n\tvar rendered_element = {\r\n\t\tblueprint: virtual_element.blueprint,\r\n\t\torigin: virtual_element,\r\n\t\tsnapshot: element,\r\n\t\ttester: _generateTestMethods(element_rect),\r\n\t\tsockets: generateSockets(element)\r\n\t}\r\n\r\n\treturn rendered_element;\r\n}\r\n\r\nfunction generateSockets(rendered_element) {\r\n\tvar tester = _generateTestMethods(rendered_element)();\r\n\r\n\t// var colors = [\r\n\t// \t'red',\r\n\t// \t'green',\r\n\t// \t'blue',\r\n\t// \t'black',\r\n\t// \t'orange',\r\n\t// \t'purple',\r\n\t// \t'grey',\r\n\t// \t'hotpink'\r\n\t// ];\r\n\r\n\tvar colors = [\r\n\t\t'transparent',\r\n\t\t'transparent',\r\n\t\t'transparent',\r\n\t\t'transparent',\r\n\t\t'transparent',\r\n\t\t'transparent',\r\n\t\t'transparent',\r\n\t\t'transparent'\r\n\t];\r\n\r\n\tvar sockets = [\r\n\t\t_generateSocket(rendered_element, 0, \t\t\t0, colors[0]),\t// socket 1: top left\r\n\t\t_generateSocket(rendered_element, tester.w / 2, 0, colors[1]),\t// socket 2: top center\r\n\t\t_generateSocket(rendered_element, tester.w, \t0, colors[2]),\t// socket 3: top right\r\n\r\n\t\t_generateSocket(rendered_element, 0, \t\t\ttester.h / 2, colors[3]),\t// socket 4: middle left\r\n\t\t_generateSocket(rendered_element, tester.w, \ttester.h / 2, colors[4]),\t// socket 5: middle right\r\n\r\n\t\t_generateSocket(rendered_element, 0, \t\t\ttester.h, colors[5]),\t// socket 6: bottom left\r\n\t\t_generateSocket(rendered_element, tester.w / 2, tester.h, colors[6]),\t// socket 7: bottom center\r\n\t\t_generateSocket(rendered_element, tester.w, \ttester.h, colors[7])\t// socket 8: bottom right\r\n\t]\r\n\r\n\treturn function (number) {\r\n\t\treturn [sockets[number - 1]().cx, sockets[number - 1]().cy];\r\n\t}\r\n}\r\n\r\nfunction _generateSocket(rendered_element, cx, cy, color) {\r\n\tvar socket = rendered_element.circle(5).center(cx, cy).fill(color);\r\n\tvar tester = _generateTestMethods(socket);\r\n\r\n\treturn tester;\r\n}\r\n\r\nfunction _generateTestMethods(rendered_element) {\r\n\treturn function () {\r\n\t\tvar rbox = rendered_element.rbox();\r\n\t\tvar diagram_rbox = diagram.rbox();\r\n\r\n\t\tvar x = rbox.x - diagram_rbox.x;\r\n\t\tvar y = rbox.y - diagram_rbox.y;\r\n\r\n\t\treturn {\r\n\t\t\t'x': x,\r\n\t\t\t'y': y,\r\n\t\t\t'x2': x + rbox.w,\r\n\t\t\t'y2': y + rbox.h,\r\n\t\t\t'cx': x + rbox.w / 2,\r\n\t\t\t'cy': y + rbox.h / 2,\r\n\t\t\t'w': rbox.w,\r\n\t\t\t'h': rbox.h\r\n\t\t}\r\n\t}\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/base.js\n// module id = 1\n// module chunks = 0","'use strict';\r\n\r\nimport {getHash} from './common';\r\nimport {checkConnectionType, defineLineShape, createConnection} from './lines';\r\n\r\nexport function connectElements(strict_connection_blueprint) {\r\n\r\n\tvar from = strict_connection_blueprint.from;\r\n\tvar to = strict_connection_blueprint.to;\r\n\r\n\tvar from_coords = from.rendered_element.sockets(from.socket);\r\n\tvar to_coords = to.rendered_element.sockets(to.socket);\r\n\r\n\tvar connection_blueprint = Object.assign({}, strict_connection_blueprint);\r\n\tdelete connection_blueprint.from;\r\n\tdelete connection_blueprint.to;\r\n\r\n\tvar type = checkConnectionType(connection_blueprint.type);\r\n\r\n\ttype.shape = defineLineShape(from.socket, to.socket);\r\n\r\n\tdelete connection_blueprint.type;\r\n\r\n\treturn createConnection(Object.assign({}, {\r\n\t\tfrom: from_coords,\r\n\t\tto: to_coords,\r\n\t\ttype: type\r\n\t}, connection_blueprint));\r\n}\r\n\r\nexport function createElement(blueprint) {\r\n\tvar id = 'element_' + getHash();\r\n\tvar position = blueprint.position || [0, 0];\r\n\tvar type = checkElementType(blueprint.type);\r\n\tvar blueprint_style = blueprint.theme || {};\r\n\r\n\tvar default_theme = {\r\n\t\tpadding: [15, 10],\r\n\r\n\t\tborder_color: 'black',\r\n\t\tborder_width: 2,\r\n\t\tborder_radius: 4,\r\n\t\t\r\n\t\tcolor: 'black',\r\n\t\tfont_family: 'Arial',\r\n\t\tfont_size: 14,\r\n\t\tline_height: 1.25,\r\n\t\tfont_style: 'normal',\r\n\t\tfont_weight: 'normal',\r\n\t\ttext_align: 'left',\r\n\r\n\t\tbackground_color: 'white'\r\n\t};\r\n\r\n\tvar style = {\r\n\t\ttext_style: {\r\n\t\t\t'leading': blueprint_style.line_height || default_theme.line_height,\r\n\t\t\t'family': blueprint_style.font_family || default_theme.font_family,\r\n\t\t\t'size': blueprint_style.font_size || default_theme.font_size,\r\n\t\t\t'style': blueprint_style.font_style || default_theme.font_style,\r\n\t\t\t'weight': blueprint_style.font_weight || default_theme.font_weight,\r\n\t\t\t'fill': blueprint_style.color || default_theme.color,\r\n\t\t\t'anchor': (function () {\r\n\t\t\t\tvar text_align = blueprint_style.text_align || default_theme.text_align;\r\n\r\n\t\t\t\tif (text_align == 'left') {\r\n\t\t\t\t\treturn 'start';\r\n\t\t\t\t} else if (text_align == 'center') {\r\n\t\t\t\t\treturn 'middle';\r\n\t\t\t\t} else if (text_align == 'right') {\r\n\t\t\t\t\treturn 'end';\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// error\r\n\t\t\t\t}\r\n\t\t\t})()\r\n\t\t},\r\n\t\trect_style: {\r\n\t\t\t'fill': blueprint_style.background_color || default_theme.background_color,\r\n\t\t\t'stroke': blueprint_style.border_color || default_theme.border_color,\r\n\t\t\t'stroke-width': blueprint_style.border_width || default_theme.border_width,\r\n\t\t\t'rx': blueprint_style.border_radius || default_theme.border_radius,\r\n\t\t\t'ry': blueprint_style.border_radius || default_theme.border_radius\r\n\t\t},\r\n\t\telement_style: {\r\n\t\t\t'padding' : blueprint_style.padding || default_theme.padding\r\n\t\t}\r\n\t}\r\n\r\n\tvar text = {\r\n\t\ttext: fitText(blueprint.text),\r\n\t\tposition: [\r\n\t\t\tstyle.element_style.padding[0] + style.rect_style['stroke-width'] / 2,\r\n\t\t\tstyle.element_style.padding[1] + style.rect_style['stroke-width'] / 2\r\n\t\t]\r\n\t}\r\n\r\n\treturn {\r\n\t\tid: id,\r\n\t\tposition: position,\r\n\t\ttype: type,\r\n\t\ttext: text,\r\n\t\tstyle: style,\r\n\t\tblueprint: blueprint\r\n\t}\r\n}\r\n\r\nexport function createAddress(element, socket) {\r\n\treturn {\r\n\t\trendered_element: element,\r\n\t\tsocket: socket\r\n\t}\r\n}\r\n\r\nexport function checkElementType(type) {\r\n\tvar defaults = {\r\n\t\ttype: 'simple'\r\n\t}\r\n\r\n\tvar new_type = Object.assign({}, type);\r\n\r\n\tfor (var param in defaults) {\r\n\t\tif (!new_type.param) {\r\n\t\t\tnew_type.param = param;\r\n\t\t}\r\n\t}\r\n\r\n\treturn new_type;\r\n}\r\n\r\nexport function computeRectSize(rendered_label, virtual_element) {\r\n\treturn [\r\n\t\trendered_label.bbox().w + \r\n\t\t\tvirtual_element.style.element_style.padding[0] * 2 +\r\n\t\t\tvirtual_element.style.rect_style['stroke-width'],\r\n\r\n\t\trendered_label.bbox().h + \r\n\t\t\tvirtual_element.style.element_style.padding[1] * 2 + \r\n\t\t\tvirtual_element.style.rect_style['stroke-width']\r\n\t]\r\n}\r\n\r\nexport function computeTextPosition(rendered_label, virtual_element) {\r\n\treturn [\r\n\t\tvirtual_element.style.element_style.padding[0] + \r\n\t\t\tvirtual_element.style.rect_style['stroke-width'] / 2 + \r\n\t\t\t(function () {\r\n\t\t\t\tif (virtual_element.style.text_style.anchor == 'start') {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t} else if (virtual_element.style.text_style.anchor == 'middle') {\r\n\t\t\t\t\treturn rendered_label.bbox().w / 2;\r\n\t\t\t\t} else if (virtual_element.style.text_style.anchor == 'end') {\r\n\t\t\t\t\treturn rendered_label.bbox().w;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// error\r\n\t\t\t\t}\r\n\t\t\t})(),\r\n\r\n\t\tvirtual_element.style.element_style.padding[1] + \r\n\t\t\tvirtual_element.style.rect_style['stroke-width'] / 2\r\n\t];\r\n}\r\n\r\nfunction fitText(text, max_length) {\r\n\tvar max_word_length = max_length || 20;\r\n\r\n\tvar words = text.split(' ');\t\r\n\r\n\tvar lines = [];\r\n\tvar line = '';\r\n\r\n\twords.forEach(function (word) {\r\n\t\tif (line.length + word.length >= getLongestWordLength(words, max_word_length)) {\r\n\t\t\tlines.push(line);\r\n\t\t\tline = '';\r\n\t\t}\r\n\t\tline += word + ' ';\r\n\t});\r\n\r\n\tif (line) {\r\n\t\tlines.push(line);\r\n\t}\r\n\r\n\tlines = lines.map(function (line) {\r\n\t\treturn line.slice(0, -1) + '\\n';\r\n\t});\r\n\r\n\treturn lines.join('');\r\n}\r\n\r\nfunction getLongestWordLength(words, max_word_length) {\r\n\tvar real_max_word_length = words.concat().sort(function (a, b) {\r\n\t\treturn b.length - a.length;\r\n\t})[0].length;\r\n\r\n\treturn Math.max(real_max_word_length, max_word_length);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/toolkit/elements.js\n// module id = 2\n// module chunks = 0","'use strict';\r\n\r\nexport function checkIfInside(rendered_element, dot_coordinates) {\r\n\tvar x = dot_coordinates[0];\r\n\tvar y = dot_coordinates[1];\r\n\r\n\tvar bbox = rendered_element.tester();\r\n\r\n\treturn (x > bbox.x) && \r\n\t\t(x < bbox.x2) && \r\n\t\t(y > bbox.y) && \r\n\t\t(y < bbox.y2);\r\n}\r\n\r\nexport function defineRelativePosition(rendered_element_1, rendered_element_2) {\r\n\t// how element_2 relates to element_1\r\n\r\n\tvar bbox_1 = rendered_element_1.tester();\r\n\tvar bbox_2 = rendered_element_2.tester();\r\n\r\n\t// more is rigter\r\n\tvar horizontal_offset = bbox_2.x - bbox_1.x;\r\n\r\n\t// more is lower\r\n\tvar vertical_offset = bbox_2.y - bbox_1.y;\r\n\r\n\tvar sectors = [];\r\n\r\n\tvar bbox_2_relative_x = bbox_2.x - bbox_1.cx;\r\n\tvar bbox_2_relative_y = bbox_2.y - bbox_1.cy;\r\n\r\n\tsectors.push(defineDotRelativePosition(bbox_1, bbox_2.x, bbox_2.y));\t// top left\r\n\tsectors.push(defineDotRelativePosition(bbox_1, bbox_2.x2, bbox_2.y));\t// top right\r\n\tsectors.push(defineDotRelativePosition(bbox_1, bbox_2.x, bbox_2.y2));\t// bottom left\r\n\tsectors.push(defineDotRelativePosition(bbox_1, bbox_2.x2, bbox_2.y2));\t// bottom right\r\n\r\n\tvar unique_sectors = []\r\n\r\n\tsectors.forEach(function (sector) {\r\n\t\tif (unique_sectors.indexOf(sector) == -1) {\r\n\t\t\tunique_sectors.push(sector);\r\n\t\t}\r\n\t})\r\n\r\n\tunique_sectors.sort(function (a, b) {\r\n\t\treturn a - b;\r\n\t});\r\n\r\n\treturn unique_sectors.join('');\r\n\r\n}\r\n\r\nfunction defineDotRelativePosition(bbox, x, y) {\r\n\r\n\tvar relative_x = Math.abs(bbox.cx - x);\r\n\tvar relative_y = Math.abs(bbox.cy - y);\r\n\r\n\r\n\tif (x >= bbox.cx) {\r\n\t\t// righter: sectors 1, 2, 3, 4\r\n\r\n\t\tif (y <= bbox.cy) {\r\n\t\t\t// above: sectors 1 or 2\r\n\r\n\t\t\tif (relative_x >= relative_y) {\r\n\t\t\t\t// sector 2\r\n\t\t\t\treturn 2;\r\n\t\t\t} else {\r\n\t\t\t\t// sector 1\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\t// under: sectors 3 or 4\r\n\r\n\t\t\tif (relative_x >= relative_y) {\r\n\t\t\t\t// sector 3\r\n\t\t\t\treturn 3;\r\n\t\t\t} else {\r\n\t\t\t\t// sector 4\r\n\t\t\t\treturn 4;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} else {\r\n\t\t// lefter: sectors 5, 6, 7, 8\r\n\r\n\t\tif (y <= bbox.cy) {\r\n\t\t\t// above: sectors 7 or 8\r\n\r\n\t\t\tif (relative_x >= relative_y) {\r\n\t\t\t\t// sector 7\r\n\t\t\t\treturn 7;\r\n\t\t\t} else {\r\n\t\t\t\t// sector 8\r\n\t\t\t\treturn 8;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\t// under: sectors 5 or 6\r\n\r\n\t\t\tif (relative_x >= relative_y) {\r\n\t\t\t\t// sector 6\r\n\t\t\t\treturn 6;\r\n\t\t\t} else {\r\n\t\t\t\t// sector 5\r\n\t\t\t\treturn 5;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/toolkit/geometry.js\n// module id = 3\n// module chunks = 0","'use strict';\r\n\r\nimport {getHash} from './common';\r\n\r\nexport function createConnection (connection_blueprint) {\r\n\tvar id = 'connection_' + getHash();\r\n\t\r\n\tif (connection_blueprint.from && connection_blueprint.to) {\r\n\t\tvar from = connection_blueprint.from;\r\n\t\tvar to = connection_blueprint.to;\r\n\t} else {\r\n\t\t// error\r\n\t}\r\n\r\n\tvar type = checkConnectionType(connection_blueprint.type);\r\n\r\n\tvar blueprint_style = connection_blueprint.style || {};\r\n\r\n\tvar default_style = {\r\n\t\t'stroke': 'black',\r\n\t\t'stroke-width': '2',\r\n\t\t'fill': 'none',\r\n\t\t'stroke-linecap': 'round',\r\n\t\t'stroke-dasharray': 'none'\r\n\t}\r\n\r\n\tvar style = {\r\n\t\t'stroke': blueprint_style['stroke'] || default_style['stroke'],\r\n\t\t'stroke-width': blueprint_style['stroke-width'] || default_style['stroke-width'],\r\n\t\t'fill': blueprint_style['fill'] || default_style['fill'],\r\n\t\t'stroke-linecap': blueprint_style['stroke-linecap'] || default_style['stroke-linecap'],\r\n\t\t'stroke-dasharray': blueprint_style['stroke-dasharray'] || default_style['stroke-dasharray']\r\n\t}\r\n\r\n\treturn {\r\n\t\tid: id,\r\n\t\ttype: type,\r\n\t\tfrom: from,\r\n\t\tto: to,\r\n\t\tstyle: style,\r\n\t\tblueprint: connection_blueprint\r\n\t}\r\n}\r\n\r\nexport function checkConnectionType(type) {\r\n\tvar defaults = {\r\n\t\ttype: 'simple',\r\n\t\tshape: 'cubic',\r\n\t\troughness: 'soft'\r\n\t}\r\n\r\n\tvar new_type = Object.assign({}, type);\r\n\r\n\tfor (var param in defaults) {\r\n\t\tif (!new_type[param]) {\r\n\t\t\tnew_type[param] = defaults[param];\r\n\t\t}\r\n\t}\r\n\r\n\treturn new_type;\r\n}\r\n\r\nexport function defineLineShape(socket_1, socket_2) {\r\n\tvar sockets = [socket_1, socket_2].map(function (a) {\r\n\t\treturn parseInt(a);\r\n\t}).sort(function (a, b) {\r\n\t\treturn a - b;\r\n\t}).join('');\r\n\r\n\tswitch (sockets) {\r\n\t\tcase '24':\r\n\t\tcase '25':\r\n\t\tcase '47':\r\n\t\tcase '57':\r\n\t\t\treturn 'arc';\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\treturn 'cubic';\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/toolkit/lines.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}