{"version":3,"sources":["webpack:///webpack/bootstrap 49fcdc96d9950a3765fc","webpack:///./stagezero/tools.js","webpack:///./stagezero/layers/index.js","webpack:///./stagezero/base.js","webpack:///./stagezero/connections/index.js","webpack:///./stagezero/connections/lines.js","webpack:///./stagezero/connections/style.js","webpack:///./stagezero/elements/geometry.js","webpack:///./stagezero/elements/index.js","webpack:///./stagezero/elements/style.js","webpack:///./stagezero/elements/text.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AChEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,cAAc;;AAEhD,iCAAiC;AACjC;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;AClBA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,wBAAwB;AACxB;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA,wBAAwB;AACxB;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC3DA;;AAEoB;AACqB;AACjB;;AAExB;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;;AAED;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI;;AAEJ;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;;;;;;;;;;;AC1FA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGmC;AACZ;AACE;AACT;;AAEhB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA,yCAAyC;AACzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;ACtFA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC3CA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;;;;;;;;AC5BA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC/CA;;AAEA;;AAEA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGgB;AACY;AACiB;AAC7B;AACG;;;AAGnB;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA,sCAAsC;AACtC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;ACvSA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEmB;;AAEnB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9GA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,6B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA,EAAE;;AAEF;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 49fcdc96d9950a3765fc","'use strict';\r\n\r\n// set of handy pure functions\r\n\r\nexport function getHash(object_type) {\r\n\treturn object_type.toString() + '_' + Math.floor(Math.random() * new Date()).toString();\r\n}\r\n\r\nexport function fillObject(object, defaults) {\r\n\tvar new_object = Object.assign({}, object || {});\r\n\r\n\tfor (var param in defaults || {}) {\r\n\t\tif (!new_object[param]) {\r\n\t\t\tnew_object[param] = defaults[param];\r\n\t\t}\r\n\t}\r\n\r\n\treturn new_object;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./stagezero/tools.js\n// module id = 0\n// module chunks = 0","'use strict';\r\n\r\n// layers api\r\n\r\nexport function _createLayer(stage) {\r\n\treturn stage.group();\r\n}\r\n\r\nexport function cloneLayer(layer) {\r\n\tvar new_layer = layer.clone();\r\n\t\r\n\tnew_layer.elements = layer.elements;\r\n\tnew_layer.connections = layer.connections;\r\n\r\n\treturn new_layer;\r\n}\r\n\r\n\r\n// elements\r\nexport function getElements(layer) {\r\n\treturn Object.assign({}, layer.elements);\r\n}\r\n\r\nexport function getElementsAsArray(layer) {\r\n\tvar elements = [];\r\n\r\n\tvar layer_elements = getElements(layer);\r\n\r\n\tfor (let element_id in layer_elements) {\r\n\t\telements.push(layer_elements[element_id]);\r\n\t}\r\n\r\n\treturn elements;\r\n}\r\n\r\nexport function getElementById(layer, element_id) {\r\n\treturn getElements(layer)[element_id];\r\n}\r\n\r\n\r\n//connections\r\nexport function getConnections(layer) {\r\n\treturn Object.assign({}, layer.connections);\r\n}\r\n\r\nexport function getConnectionsAsArray(layer) {\r\n\tvar connections = [];\r\n\r\n\tvar layer_connections = getConnections(layer);\r\n\r\n\tfor (let connection_id in layer_connections) {\r\n\t\tconnections.push(layer_connections[connection_id]);\r\n\t}\r\n\r\n\treturn connections;\r\n}\r\n\r\nexport function getConnectionById(layer, connection_id) {\r\n\treturn getConnections(layer)[connection_id];\r\n}\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./stagezero/layers/index.js\n// module id = 1\n// module chunks = 0","'use strict';\r\n\r\nimport {drawElement} from './elements';\r\nimport {_createLayer, getElementsAsArray} from './layers';\r\nimport {connectElements} from './connections';\r\n\r\nvar stage = SVG('diagram');\r\nvar layer = _createLayer(stage);\r\n\r\n// layer = drawElement(layer, {\r\n// \tposition: {\r\n// \t\tx: 150,\r\n// \t\ty: 200\r\n// \t},\r\n// \ttext: 'Hello'\r\n// });\r\n\r\n// layer = drawElement(layer, {\r\n// \tposition: {\r\n// \t\tx: 300,\r\n// \t\ty: 200\r\n// \t},\r\n// \ttext: 'Harder, Ivan',\r\n// \tstyle: {\r\n// \t\tbackground_color: 'pink'\r\n// \t}\r\n// });\r\n\r\n// layer = drawElement(layer, {\r\n// \tposition: {\r\n// \t\tx: 300,\r\n// \t\ty: 300\r\n// \t},\r\n// \ttext: 'Harder, Ivan',\r\n// \tstyle: {\r\n// \t\tbackground_color: 'pink'\r\n// \t}\r\n// });\r\n\r\nlayer.replace(drawElement(layer, {\r\n\tposition: {\r\n\t\tx: 150,\r\n\t\ty: 200\r\n\t},\r\n\ttext: 'Hello'\r\n}));\r\n\r\nvar elements = getElementsAsArray(layer);\r\nconsole.log(elements);\r\n\r\nlayer.draggy();\r\n\r\n\r\n// console.log(elements[0].extensions.socket(1));\r\n\r\n// for (let element_id in layer.elements) {\r\n// \tconsole.log(layer.elements[element_id].extensions.socket(1));\r\n// }\r\n\r\n// layer = connectElements(layer, {\r\n// \tfrom: {\r\n// \t\telement_id: elements[0].id(),\r\n// \t\tsocket: 4\r\n// \t},\r\n// \tto: {\r\n// \t\telement_id: elements[2].id(),\r\n// \t\tsocket: 4\r\n// \t},\r\n// \tstyle: {\r\n// \t\t'stroke': 'red',\r\n// \t\t'stroke-dasharray': '5, 4'\r\n// \t}\r\n// });\r\n\r\n// elements[0].draggy();\r\n\r\n\r\n\r\n// for (let element_id in layer.elements) {\r\n// \tconsole.log(layer.elements[element_id].extensions.socket(1));\r\n// }\r\n\r\n// for (let connection_id in layer.connections) {\r\n// \tconsole.log(layer.connections[connection_id]);\r\n// }\r\n\r\n// console.log(layer.elements[0]);\r\n\r\n// console.log(layer.elements);\r\n\r\n// console.log('it works!');\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./stagezero/base.js\n// module id = 2\n// module chunks = 0","'use strict';\r\n\r\n// everything needed to work with connections between elements\r\n\r\n// \tconnection_blueprint:\r\n// \t\tfrom: address\r\n// \t\tto: address\r\n// \t\ttype: connection_type\r\n// \t\tstyle: connection_style\r\n\r\n// \tconnection_type:\r\n// \t\ttype: 'simple' by default\r\n// \t\tdirection: 'normal' or 'reverse'\r\n\r\n// \taddress:\r\n// \t\telement_id\r\n// \t\tsocket\r\n\r\n\r\nimport {getElementById, cloneLayer} from '../layers';\r\nimport {arcTo, cubicTo} from './lines';\r\nimport {convertLineStyle} from './style';\r\nimport {getHash} from '../tools';\r\n\r\nexport function connectElements(layer, connection_blueprint) {\r\n\tvar new_layer = cloneLayer(layer);\r\n\r\n\tvar from = getElementById(new_layer, connection_blueprint.from.element_id).extensions.socket(connection_blueprint.from.socket);\r\n\tvar to = getElementById(new_layer, connection_blueprint.to.element_id).extensions.socket(connection_blueprint.to.socket);\r\n\r\n\tvar line_shape = defineLineShape(connection_blueprint.from, connection_blueprint.to);\r\n\tvar line_path = '';\r\n\r\n\tswitch (line_shape) {\r\n\t\tcase 'arc':\r\n\t\t\tline_path = arcTo(from, to);\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'cubic':\r\n\t\t\tline_path = cubicTo(from, to);\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\t//error;\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tvar line_style = convertLineStyle(connection_blueprint.style).line_style;\r\n\r\n\tvar connection = new_layer.path(line_path).attr(line_style);\r\n\tvar connection_id = getHash('connection');\r\n\r\n\tconnection.attr({\r\n\t\tid: connection_id\r\n\t})\r\n\r\n\tvar connection_with_id = {};\r\n\tconnection_with_id[connection_id] = connection;\r\n\r\n\tnew_layer.connections = Object.assign({}, \r\n\t\tlayer.connections,\r\n\t\tconnection_with_id\r\n\t);\r\n\r\n\treturn new_layer;\r\n}\r\n\r\nfunction defineLineShape(from, to) {\r\n\tvar sockets = [from.socket, to.socket].map(function (a) {\r\n\t\treturn parseInt(a);\r\n\t}).sort(function (a, b) {\r\n\t\treturn a - b;\r\n\t}).join('');\r\n\r\n\tswitch (sockets) {\r\n\t\tcase '24':\r\n\t\tcase '25':\r\n\t\tcase '47':\r\n\t\tcase '57':\r\n\t\t\treturn 'arc';\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\treturn 'cubic';\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./stagezero/connections/index.js\n// module id = 3\n// module chunks = 0","'use strict';\r\n\r\n// generate paths\r\n\r\nexport function arcTo(from, to) {\r\n\tvar x_between_from_and_to = from.x + Math.abs(from.x - to.x) / 2;\r\n\r\n\tvar bias = {\r\n\t\tx: from.x,\r\n\t\ty: to.y\r\n\t}\r\n\r\n\treturn cubic(from, to, bias, bias);\r\n}\r\n\r\nexport function cubicTo(from, to) {\r\n\tvar x_between_from_and_to = from.x + Math.abs(from.x - to.x) / 2;\r\n\r\n\tvar bias_1 = {\r\n\t\tx: x_between_from_and_to,\r\n\t\ty: from.y\r\n\t}\r\n\r\n\tvar bias_2 = {\r\n\t\tx: x_between_from_and_to,\r\n\t\ty: to.y\r\n\t}\r\n\r\n\treturn cubic(from, to, bias_1, bias_2);\r\n}\r\n\r\nfunction cubic(from, to, bias_1, bias_2) {\r\n\treturn 'M ' + \r\n\t\tfrom.x.toString() + ' ' + \r\n\t\tfrom.y.toString() + ' ' + \r\n\t\t'C ' +\r\n\t\tbias_1.x.toString() + ' ' + \r\n\t\tbias_1.y.toString() + ' ' +\r\n\t\tbias_2.x.toString() + ' ' + \r\n\t\tbias_2.y.toString() + \r\n\t\t' ' + \r\n\t\tto.x.toString() + ' ' + \r\n\t\tto.y.toString();\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./stagezero/connections/lines.js\n// module id = 4\n// module chunks = 0","'use strict';\r\n\r\n// connection line styling\r\n\r\n// \tline_style:\r\n// \t\tstroke\r\n// \t\tstroke-width\r\n// \t\tfill\r\n// \t\tstroke-linecap\r\n// \t\tstroke-dasharray\r\n\r\n\r\nimport {fillObject} from '../tools';\r\n\r\nexport function convertLineStyle(line_style) {\r\n\tvar default_line_style = {\r\n\t\t'stroke': 'black',\r\n\t\t'stroke-width': '2',\r\n\t\t'fill': 'none',\r\n\t\t'stroke-linecap': 'round',\r\n\t\t'stroke-dasharray': 'none'\r\n\t}\r\n\r\n\tvar passed_style = fillObject(line_style, default_line_style);\r\n\r\n\treturn {\r\n\t\tline_style: passed_style\r\n\t}\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./stagezero/connections/style.js\n// module id = 5\n// module chunks = 0","'use strict';\r\n\r\n// methods for computing element's geometry\r\n\r\nexport function computeRectSize(rendered_label, style) {\r\n\treturn {\r\n\t\tw: rendered_label.bbox().w + \r\n\t\t\tstyle.additional_style.text_offset.x * 2 +\r\n\t\t\tstyle.rect_style['stroke-width'],\r\n\r\n\t\th: rendered_label.bbox().h + \r\n\t\t\tstyle.additional_style.text_offset.y * 2 + \r\n\t\t\tstyle.rect_style['stroke-width'] \r\n\t}\r\n}\r\n\r\nexport function computeTextPosition(rendered_label, style) {\r\n\r\n\tvar text_offset = style.additional_style.text_offset;\r\n\tvar stroke_offset = style.rect_style['stroke-width'] / 2;\r\n\r\n\treturn {\r\n\t\tx: text_offset.x + stroke_offset + \r\n\t\t\tcomputeAnchorOffset(rendered_label, style.text_style.anchor),\r\n\r\n\t\ty: text_offset.y + stroke_offset\r\n\t}\r\n}\r\n\r\nfunction computeAnchorOffset(rendered_label, anchor) {\r\n\tswitch (anchor) {\r\n\t\tcase 'start':\r\n\t\t\treturn 0;\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'middle':\r\n\t\t\treturn rendered_label.bbox().w / 2;\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'end':\r\n\t\t\treturn rendered_label.bbox().w;\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\t// error\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./stagezero/elements/geometry.js\n// module id = 6\n// module chunks = 0","'use strict';\r\n\r\n// everything needed to work with elements\r\n\r\n//\telement_type:\r\n//\t\ttype: object of { type: 'simple' } by default, needs for Dolphin to be extendable\r\n//\t\r\n//\telement_blueprint:\r\n//\t\tid\r\n//\t\tposition: {x, y}\r\n//\t\ttype: element_type\r\n//\t\ttext: element text as a single line\r\n//\t\tstyle: element_style (just like default_element_style but you may omit unused field like you are in CSS)\r\n//\r\n//\t\r\n//\taddress:\r\n//\t\trendered_element,\r\n//\t\tsocket\r\n//\t\r\n//\trendered_element:\r\n//\t\tid\r\n//\t\trepresentation: actual element on the layer\r\n//\t\ttester\r\n//\t\tsocket: function to get socket's coordinates by its number\r\n//\r\n//\tsockets: TODO\r\n//\ttester: TODO\r\n\r\n\r\n// \telement_style = {\r\n// \t\tpadding: [15, 10],\r\n//\r\n// \t\tborder_color: 'black',\r\n// \t\tborder_width: 2,\r\n// \t\tborder_radius: 4,\r\n//\r\n// \t\tcolor: 'black',\r\n// \t\tfont_family: 'Arial',\r\n// \t\tfont_size: 14,\r\n// \t\tline_height: 1.25,\r\n// \t\tfont_style: 'normal',\r\n// \t\tfont_weight: 'normal',\r\n// \t\ttext_align: 'left',\r\n//\r\n// \t\tbackground_color: 'white'\r\n// \t}\r\n\r\n\r\nimport {fitText} from './text';\r\nimport {convertElementStyle} from './style';\r\nimport {computeRectSize, computeTextPosition} from './geometry';\r\nimport {getHash} from '../tools';\r\nimport {cloneLayer} from '../layers';\r\n\r\n\r\nexport function drawElement(layer, element_blueprint) {\r\n\tvar new_layer = cloneLayer(layer);\r\n\t\r\n\t// create the element itself\r\n\tvar element = _createElement(new_layer);\r\n\tvar style = convertElementStyle(element_blueprint.style);\r\n\r\n\t// console.log(element_blueprint);\r\n\r\n\tvar element_text = element.text(\r\n\t\t\tfitText(element_blueprint.text)\r\n\t\t)\r\n\t\t.font(style.text_style);\r\n\r\n\tvar rect_size = computeRectSize(element_text, style);\r\n\tvar element_rect = element.rect(rect_size.w, rect_size.h)\r\n\t\t.attr(style.rect_style);\r\n\r\n\tvar text_position = computeTextPosition(element_text, style);\r\n\telement_text.move(text_position.x, text_position.y);\r\n\telement_text.front();\r\n\r\n\telement.move(element_blueprint.position.x, element_blueprint.position.y);\r\n\r\n\t// assign element's data\r\n\r\n\tvar element_tester = _generateTestMethods(element_rect, new_layer);\r\n\r\n\telement.extensions = {\r\n\t\tblueprint: element_blueprint,\r\n\t\ttester: element_tester,\r\n\t\tsocket: _generateSockets(element_tester)\r\n\t}\r\n\r\n\tvar element_id = getHash('element');\r\n\r\n\telement.attr({\r\n\t\tid: element_id\r\n\t})\r\n\r\n\tvar element_with_id = {};\r\n\telement_with_id[element_id] = element;\r\n\r\n\tnew_layer.elements = Object.assign({}, \r\n\t\tlayer.elements,\r\n\t\telement_with_id\r\n\t);\r\n\r\n\treturn new_layer;\r\n}\r\n\r\nfunction _createElement(layer) {\r\n\treturn layer.group();\r\n}\r\n\r\nfunction cloneElement(element) {\r\n\tvar new_element = element.clone();\r\n\r\n\tnew_element.extensions = element.extensions;\r\n\tnew_element.attr({\r\n\t\tid: element.attr('id')\r\n\t});\r\n\r\n\treturn new_element;\r\n}\r\n\r\nfunction _generateTestMethods(element, layer) {\r\n\treturn function () {\r\n\t\tvar rbox = element.rbox();\r\n\t\tvar layer_rbox = layer.doc().rbox();\r\n\r\n\t\tvar x = rbox.x - layer_rbox.x;\r\n\t\tvar y = rbox.y - layer_rbox.y;\r\n\r\n\t\treturn {\r\n\t\t\t'x': x,\r\n\t\t\t'y': y,\r\n\t\t\t'x2': x + rbox.w,\r\n\t\t\t'y2': y + rbox.h,\r\n\t\t\t'cx': x + rbox.w / 2,\r\n\t\t\t'cy': y + rbox.h / 2,\r\n\t\t\t'w': rbox.w,\r\n\t\t\t'h': rbox.h\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction _generateSockets(tester) {\r\n\treturn function (number) {\r\n\r\n\t\tvar activated_tester = tester();\r\n\r\n\t\tvar socket_offsets = [\r\n\t\t\t{\r\n\t\t\t\t// socket 1: top left\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t// socket 2: top center\r\n\t\t\t\tx: activated_tester.w / 2,\r\n\t\t\t\ty: 0\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t// socket 3: top right\r\n\t\t\t\tx: activated_tester.w,\r\n\t\t\t\ty: 0\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t// socket 4: middle left\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: activated_tester.h / 2\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t// socket 5: middle right\r\n\t\t\t\tx: activated_tester.w,\r\n\t\t\t\ty: activated_tester.h / 2\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t// socket 6: bottom left\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: activated_tester.h\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t// socket 7: bottom center\r\n\t\t\t\tx: activated_tester.w / 2,\r\n\t\t\t\ty: activated_tester.h\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t// socket 8: bottom right\r\n\t\t\t\tx: activated_tester.w,\r\n\t\t\t\ty: activated_tester.h\r\n\t\t\t},\r\n\t\t];\r\n\r\n\t\tvar socket_positions = socket_offsets.map(function (offset) {\r\n\t\t\treturn {\r\n\t\t\t\tx: offset.x + activated_tester.x,\r\n\t\t\t\ty: offset.y + activated_tester.y\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn socket_positions[number - 1];\r\n\t}\r\n}\r\n\r\n// function _generateSockets(layer, element) {\r\n// \tvar new_element = cloneElement(element);\r\n\r\n// \tvar tester = _generateTestMethods(new_element, layer)();\r\n\r\n// \tvar colors = [\r\n// \t\t'red',\r\n// \t\t'green',\r\n// \t\t'blue',\r\n// \t\t'black',\r\n// \t\t'orange',\r\n// \t\t'purple',\r\n// \t\t'grey',\r\n// \t\t'hotpink'\r\n// \t];\r\n\r\n// \t// var colors = [\r\n// \t// \t'transparent',\r\n// \t// \t'transparent',\r\n// \t// \t'transparent',\r\n// \t// \t'transparent',\r\n// \t// \t'transparent',\r\n// \t// \t'transparent',\r\n// \t// \t'transparent',\r\n// \t// \t'transparent'\r\n// \t// ];\r\n\r\n// \tvar socket_positions = [\r\n// \t\t{\r\n// \t\t\t// socket 1: top left\r\n// \t\t\tx: 0,\r\n// \t\t\ty: 0\r\n// \t\t},\r\n// \t\t{\r\n// \t\t\t// socket 2: top center\r\n// \t\t\tx: tester.w / 2,\r\n// \t\t\ty: 0\r\n// \t\t},\r\n// \t\t{\r\n// \t\t\t// socket 3: top right\r\n// \t\t\tx: tester.w,\r\n// \t\t\ty: 0\r\n// \t\t},\r\n// \t\t{\r\n// \t\t\t// socket 4: middle left\r\n// \t\t\tx: 0,\r\n// \t\t\ty: tester.h / 2\r\n// \t\t},\r\n// \t\t{\r\n// \t\t\t// socket 5: middle right\r\n// \t\t\tx: tester.w,\r\n// \t\t\ty: tester.h / 2\r\n// \t\t},\r\n// \t\t{\r\n// \t\t\t// socket 6: bottom left\r\n// \t\t\tx: 0,\r\n// \t\t\ty: tester.h\r\n// \t\t},\r\n// \t\t{\r\n// \t\t\t// socket 7: bottom center\r\n// \t\t\tx: tester.w / 2,\r\n// \t\t\ty: tester.h\r\n// \t\t},\r\n// \t\t{\r\n// \t\t\t// socket 8: bottom right\r\n// \t\t\tx: tester.w,\r\n// \t\t\ty: tester.h\r\n// \t\t},\r\n// \t];\r\n\r\n// \t// imperative dirty stuff begin. I feel so sorry about that\r\n// \tvar current_color = 0;\r\n\r\n// \tfor (let socket_position in socket_positions) {\r\n// \t\tnew_element = generateSocket(new_element, socket_position, colors[current_color]);\r\n\r\n// \t\tif (current_color + 1 == colors.length) {\r\n// \t\t\tcurrent_color = 0;\r\n// \t\t} else {\r\n// \t\t\tcurrent_color++;\r\n// \t\t}\r\n// \t}\r\n// \t// imperative dirty stuff end\r\n\r\n// \tnew_element['sockets'] = function(number) {\r\n// \t\treturn socket_positions[number - 1];\r\n// \t}\r\n\r\n// \treturn new_element;\r\n// }\r\n\r\n// function generateSocket(element, position, color) {\r\n// \tvar new_element = cloneElement(element);\r\n// \treturn new_element.circle(5).center(position.x, position.y).fill(color);\r\n// }\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./stagezero/elements/index.js\n// module id = 7\n// module chunks = 0","'use strict';\r\n\r\n// convert CSS-like style to SVG-like:\r\n\r\n// this:\r\n// \t{\r\n// \t\tpadding\r\n// \t\tborder_color\r\n// \t\tborder_width\r\n// \t\tborder_radius\r\n//\t\r\n// \t\tcolor\r\n// \t\tfont_family\r\n// \t\tfont_size\r\n// \t\tline_height\r\n// \t\tfont_style\r\n// \t\tfont_weight\r\n// \t\ttext_align\r\n//\r\n// \t\tbackground_color\r\n// \t}\r\n//\r\n//\tto this:\r\n//\t{\r\n//\t\trect_style: {\r\n//\t\t\tfill\r\n//\t\t\tstroke\r\n//\t\t\tstroke-width\r\n//\t\t\trx\r\n//\t\t\try\r\n//\t\t},\r\n//\t\ttext_style: {\r\n//\t\t\tleading\r\n//\t\t\tfamily\r\n//\t\t\tsize\r\n//\t\t\tstyle\r\n//\t\t\tweight\r\n//\t\t\tfill\r\n//\t\t\tanchor\r\n//\t\t},\r\n//\t\tadditional_style: {\r\n//\t\t\thorizontal_text_offset,\r\n//\t\t\tvertical_text_offset\r\n//\t\t}\r\n//\t}\r\n\r\nimport {fillObject} from '../tools';\r\n\r\nexport function convertElementStyle(element_style) {\r\n\tvar default_element_style = {\r\n\t\tpadding: [15, 10],\r\n\r\n\t\tborder_color: 'black',\r\n\t\tborder_width: 2,\r\n\t\tborder_radius: 4,\r\n\t\t\r\n\t\tcolor: 'black',\r\n\t\tfont_family: 'Arial',\r\n\t\tfont_size: 14,\r\n\t\tline_height: 1.25,\r\n\t\tfont_style: 'normal',\r\n\t\tfont_weight: 'normal',\r\n\t\ttext_align: 'left',\r\n\r\n\t\tbackground_color: 'white'\r\n\t};\r\n\r\n\tvar passed_style = fillObject(element_style, default_element_style);\r\n\r\n\tvar rect_style = {\r\n\t\t'fill': passed_style.background_color,\r\n\t\t'stroke': passed_style.border_color,\r\n\t\t'stroke-width': passed_style.border_width,\r\n\t\t'rx': passed_style.border_radius,\r\n\t\t'ry': passed_style.border_radius\r\n\t}\r\n\r\n\tvar text_style = {\r\n\t\t'leading': passed_style.line_height,\r\n\t\t'family': passed_style.font_family,\r\n\t\t'size': passed_style.font_size,\r\n\t\t'style': passed_style.font_style,\r\n\t\t'weight': passed_style.font_weight,\r\n\t\t'fill': passed_style.color,\r\n\t\t'anchor': (function () {\r\n\t\t\tvar text_align = passed_style.text_align;\r\n\t\t\tif (text_align == 'left') {\r\n\t\t\t\treturn 'start';\r\n\t\t\t} else if (text_align == 'center') {\r\n\t\t\t\treturn 'middle';\r\n\t\t\t} else if (text_align == 'right') {\r\n\t\t\t\treturn 'end';\r\n\t\t\t} else {\r\n\t\t\t\t// error\r\n\t\t\t}\r\n\t\t})()\r\n\t}\r\n\r\n\tvar additional_style = {\r\n\t\ttext_offset: {\r\n\t\t\tx: passed_style.padding[1],\r\n\t\t\ty: passed_style.padding[0]\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\trect_style: rect_style,\r\n\t\ttext_style: text_style,\r\n\t\tadditional_style: additional_style\r\n\t}\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./stagezero/elements/style.js\n// module id = 8\n// module chunks = 0","'use strict';\r\n\r\n// element text processing methods\r\n\r\nexport function fitText(text, max_length) {\r\n\r\n\t// split text to lines because SVG doesn't support HTML-like line wrap\r\n\r\n\tvar max_word_length = max_length || 20;\r\n\r\n\tvar words = text.split(' ');\t\r\n\r\n\tvar lines = [];\r\n\tvar line = '';\r\n\r\n\twords.forEach(function (word) {\r\n\t\tif (line.length + word.length >= getLongestWordLength(words, max_word_length)) {\r\n\t\t\tlines.push(line);\r\n\t\t\tline = '';\r\n\t\t}\r\n\t\tline += word + ' ';\r\n\t});\r\n\r\n\tif (line) {\r\n\t\tlines.push(line);\r\n\t}\r\n\r\n\tlines = lines.map(function (line) {\r\n\t\treturn line.slice(0, -1) + '\\n';\r\n\t});\r\n\r\n\treturn lines.join('');\r\n}\r\n\r\nfunction getLongestWordLength(words, max_word_length) {\r\n\tvar real_max_word_length = words.concat().sort(function (a, b) {\r\n\t\treturn b.length - a.length;\r\n\t})[0].length;\r\n\r\n\treturn Math.max(real_max_word_length, max_word_length);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./stagezero/elements/text.js\n// module id = 9\n// module chunks = 0"],"sourceRoot":""}