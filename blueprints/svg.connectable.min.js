(function(){function t(t,a){var n={};void 0===a&&(a=t,t={}),e=t.container||this.parent||e;var o=this;if(r=t.markers||this.parent||r,n.source=o,n.target=a,n.type=t.type||"straight",t.connector&&"path"==t.connector.target.type){n.connector=t.connector;var c=n.connector.target.array.valueOf();if("M"!=c[1][0]||"M"!=c[2][0]){var i=n.connector.target.bbox();c.splice(0,0,["M",i.x+i.width/2,i.y],["M",i.x+i.width/2,i.y2]),n.connector.target.plot(c)}}else n.connector=e.path().attr("connectortype","default").fill("none");return n.sourceAttach=t.sourceAttach||"center",n.targetAttach=t.targetAttach||"center",n.color=t.color||"#000000",n.setMarker=function(t,e,r){if(r=r||this,e&&(r.markers=e),t&&"null"!=t)if("default"==t){var t=r.markers.marker(30,30),a="triangle-"+Math.random().toString(16);r.connector.attr("marker-end","url(#"+a+")"),t.attr({id:a,viewBox:"0 0 30 30",refX:"30",refY:"15",markerUnits:"strokeWidth",markerWidth:"12",markerHeight:"15"}),t.path().attr({d:"M 0 0 L 30 15 L 0 30 z"}),r.marker=t,r.marker.fill(r.color)}else r.marker=t;else if(r.marker=null,r.connector.attr("marker-end")){var n=r.connector.attr("marker-end");SVG.get(n.slice(5,n.length-1)).remove(),r.connector.removeClass("marker-end")}return r},n.setMarker(t.marker,r),n.computeConnectorCoordinates=function(t){t=t||this;var e={},r=t.source.bbox(),a=t.target.bbox();if("center"==t.sourceAttach)e.point1=[r.x+r.width/2,r.y+r.height/2];else if("ellipse"==t.source.type){var n=parseFloat(t.source.attr("rx")),o=parseFloat(t.source.attr("ry")),c=t.source.cx(),i=t.source.cy(),h=t.target.cx(),s=t.target.cy(),l=h-c,p=s-i,y=Math.sqrt(l*l+p*p),g=l/y,x=p/y,u=c+n*g,v=i+o*x;e.point1=[u+n/2,v+o/2]}else if("path"==t.source.type){var f=JSON.parse(JSON.stringify(t.source.array.valueOf()));"Z"==f[f.length-1][0]&&f.splice(f.length-1,1);var d=f,M="point2"}else var f=[["M",r.x+r.width/2,r.y],["L",r.x+r.width,r.y+r.height/2],["L",r.x+r.width/2,r.y+r.height],["L",r.x,r.y+r.height/2]],d=f,M="point2";if("center"==t.targetAttach)e.point2=[a.x+a.width/2,a.y+a.height/2];else if("ellipse"==t.target.type){var m=parseFloat(t.target.attr("rx")),k=parseFloat(t.target.attr("ry")),c=t.source.cx(),i=t.source.cy(),h=t.target.cx(),s=t.target.cy(),l=h-c,p=s-i,y=Math.sqrt(l*l+p*p),g=l/y,x=p/y,w=c+(y-m-5)*g,b=i+(y-k-5)*x;e.point2=[w+m/2,b+k/2]}else if("path"==t.target.type){var C=JSON.parse(JSON.stringify(t.target.array.valueOf()));"Z"==C[C.length-1][0]&&C.splice(C.length-1,1);var d=C,M="point1"}else var C=[["M",a.x+a.width/2,a.y],["L",a.x+a.width,a.y+a.height/2],["L",a.x+a.width/2,a.y+a.height],["L",a.x,a.y+a.height/2]],d=C,M="point1";if(!e.point1||!e.point2)if(e.min=Number.MAX_VALUE,e.point1||e.point2){M=e[M];for(var A=0;A<d.length;A++){var L=Math.pow(M[0]-d[A][d[A].length-2],2)+Math.pow(M[1]-d[A][d[A].length-1],2);e.min>L&&(e.min=L,e.point=[d[A][d[A].length-2],d[A][d[A].length-1]])}e.point1?e.point2=e.point:e.point1=e.point}else for(var A=0;A<f.length;A++)for(var O=0;O<C.length;O++){var L=Math.pow(C[O][C[O].length-2]-f[A][f[A].length-2],2)+Math.pow(C[O][C[O].length-1]-f[A][f[A].length-1],2);e.min>L&&(e.min=L,e.point1=[f[A][f[A].length-2],f[A][f[A].length-1]],e.point2=[C[O][C[O].length-2],C[O][C[O].length-1]])}var S=e.point1,N=e.point2;if("curved"==t.type){var q={x:t.source.cx(),y:t.source.cy()},F={x:t.target.cx(),y:t.target.cy()};if(Math.abs(S[0]-q.x)>.5){var J=(S[1]-q.y)/(S[0]-q.x),V=S[1]-J*S[0];if(Math.abs(N[0]-S[0])<Math.abs(N[1]-S[1]))var u=S[0]+(N[0]-S[0])/5,G={x:u,y:J*u+V};else if(Math.abs(S[1]-q.y)>.5)var v=S[1]+(N[1]-S[1])/5,G={x:(v-V)/J,y:v};else{if(N[0]-S[0]>=0)var E=1;else var E=-1;var G={x:S[0]+E*Math.abs((N[1]-S[1])/5),y:S[1]}}}else var G={x:S[0],y:S[1]+(N[1]-S[1])/5};if(Math.abs(N[0]-F.x)>.5){var I=(N[1]-F.y)/(N[0]-F.x),P=N[1]-I*N[0];if(Math.abs(N[0]-S[0])<Math.abs(N[1]-S[1]))var w=N[0]-(N[0]-S[0])/5,U={x:w,y:I*w+P};else if(Math.abs(N[1]-F.y)>.5)var b=N[1]-(N[1]-S[1])/5,U={x:(b-P)/I,y:b};else{if(N[0]-S[0]>=0)var E=1;else var E=-1;var U={x:N[0]-E*Math.abs((N[1]-S[1])/5),y:N[1]}}}else var U={x:N[0],y:N[1]-(N[1]-S[1])/5};var W={x:G.x+(U.x-G.x)/2,y:G.y+(U.y-G.y)/2},X=[["M",S[0],S[1]],["C",G.x,G.y,G.x,G.y,W.x,W.y],["C",U.x,U.y,U.x,U.y,N[0],N[1]]]}else var X=[["M",S[0],S[1]],["L",N[0],N[1]]];return X},o.cons=o.cons||[],o.cons.push(n),n.update=function(){if("default"==n.connector.attr("connectortype"))n.connector.plot(n.computeConnectorCoordinates(n));else{var t=n.connector.target.array.valueOf(),e=n.computeConnectorCoordinates(n),r=[e[0][1],e[0][2]],a=[e[e.length-1][e[e.length-1].length-2],e[e.length-1][e[e.length-1].length-1]],o=Math.sqrt(Math.pow(a[0]-r[0],2)+Math.pow(a[1]-r[1],2)),c=Math.sqrt(Math.pow(t[1][1]-t[0][1],2)+Math.pow(t[1][2]-t[0][2],2)),i=o/c,h=Math.atan((a[1]-r[1])/(a[0]-r[0]));h>0&&a[1]<r[1]?h=Math.PI+h:0>h&&a[1]>r[1]&&a[0]<r[0]&&(h=Math.PI+h);var s={x:r[0]+(a[0]-r[0])/2,y:r[1]+(a[1]-r[1])/2},l=Math.atan((t[1][2]-t[0][2])/(t[1][1]-t[0][1])),p={x:n.connector.target.cx(),y:n.connector.target.cy()},y=[1,0,0,1,s.x-p.x,s.y-p.y],g=y[0],x=y[1],u=y[2],v=y[3],f=y[4],d=y[5],M=Math.sin(-h+l),m=Math.cos(-h+l);f=-g*s.x-u*s.y+f,d=-x*s.x-v*s.y+d,y[0]=g*m+x*M,y[1]=-g*M+x*m,y[2]=u*m+v*M,y[3]=-u*M+m*v,y[4]=m*f+M*d,y[5]=m*d-M*f,y[4]=g*s.x+u*s.y+y[4],y[5]=x*s.x+v*s.y+y[5];var g=1,x=0,u=0,v=1,f=(-g*p.x-u*p.y)*i,d=(-x*p.x-v*p.y)*i,k=[];k[0]=g*i,k[1]=x*i,k[2]=u*i,k[3]=v*i,k[4]=g*p.x+u*p.y+f,k[5]=x*p.x+v*p.y+d;var w=[];w[0]=k[0]*y[0]+k[1]*y[2],w[1]=k[0]*y[1]+k[1]*y[3],w[2]=k[2]*y[0]+k[3]*y[2],w[3]=k[2]*y[1]+k[3]*y[3],w[4]=y[0]*k[4]+y[2]*k[5]+y[4],w[5]=y[1]*k[4]+y[3]*k[5]+y[5],n.connector.transform("matrix",w.join(","))}},n.update(),o.on("dragmove",n.update),a.on("dragmove",n.update),n.setConnectorColor=function(t,e){e=e||this,e.color=t,e.connector.stroke(t),e.marker&&e.marker.fill(t)},n.setConnectorColor(n.color),n.setConnectorAttachment=function(t,e,r){r=r||this,r[t+"Attach"]=e,r.update()},n.setConnector=function(t,r){r=r||this,t&&(r.connector.remove(),"default"==t?(r.connector=e.path().attr("connectortype","default").fill("none"),r.setConnectorColor(r.color)):r.connector=t,r.update())},n.setType=function(t,e){e=e||this,-1!=["straight","curved"].indexOf(t)&&e.type!=t&&(e.type=t,e.update())},n}var e=null,r=null;SVG.extend(SVG.Element,{connectable:t})}).call(this);