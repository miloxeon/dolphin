{"version":3,"sources":["webpack:///webpack/bootstrap 9f7c2ca64c5458b2a2ea","webpack:///./src/lib/tools.js","webpack:///./src/base.js","webpack:///./~/deepmerge/index.js","webpack:///./src/fixtures.js","webpack:///./src/lib/classes.js","webpack:///./src/lib/config.js","webpack:///./src/lib/connection/index.js","webpack:///./src/lib/connection/lines.js","webpack:///./src/lib/controllers.js","webpack:///./src/lib/diagram/index.js","webpack:///./src/lib/element/blueprint.js","webpack:///./src/lib/element/index.js","webpack:///./src/lib/element/model.js","webpack:///./src/lib/element/text.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;AChEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2C;AACA;;;;;;;;;;;;AClBA;;AAEA;;AAE4B;AACf;AACU;;AAEvB;AACA,4BAA4B;;AAE5B;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AC3CA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,sCAAsC;AACtC;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA,CAAC;;;;;;;;;ACnFD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AClGA;;AAEA;;AAEgB;AAChB;;;AAGA;AAMC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AAcC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AASC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;AChID;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACLA;;AAEA;;AAEuB;AACU;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;;AAEA;;AAEA;AACA;;;;;;;;;;ACpEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC3CA;;AAEiB;;AAEjB;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;;;;;;;;;;;;ACnBA;;AAEA;;AAEwB;;AAExB;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;;;;;;;;;ACzCA;;AAEA;;AAEA;AAC+E;;AAE/E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;;AAEA,2B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;;AAEA;;AAEkC;AACZ;AACE;;AAExB;;AAEA;;AAEA;AACA,kBAAkB,0BAA0B;AAC5C,kBAAkB,2BAA2B;AAC7C,kBAAkB,2BAA2B;;AAE7C,kBAAkB,2BAA2B;AAC7C,kBAAkB,4BAA4B;;AAE9C,kBAAkB,2BAA2B;AAC7C,kBAAkB,4BAA4B;AAC9C,kBAAkB,4BAA4B;;AAE9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B;;AAE1B,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,gC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;;;;;;;;;;;ACrSA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;ACpCA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B;;AAEA,4EAA4E;AAC5E,qDAAqD;;AAErD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,2BAA2B;AAC7B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,4EAA4E;;AAE5E;AACA;AACA;;AAEA,kDAAkD;;AAElD,oBAAoB;;AAEpB,mBAAmB;;AAEnB;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA,IAAI;AACJ;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;;AAEA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9f7c2ca64c5458b2a2ea","'use strict';\r\n\r\n// handy functions used everywhere\r\n\r\nexport function getHash(object_type) {\r\n\treturn Math.floor(Math.random() * new Date()).toString();\r\n}\r\n\r\nexport function getId(object_type, hash) {\r\n\treturn object_type.toString() + '_' + hash;\r\n}\r\n\r\nexport function getRawId(element_id) {\r\n\treturn parseInt(element_id.split('_')[1]);\r\n}\r\n\r\nexport function getTypeById(element_type) {\r\n\treturn parseInt(element_id.split('_')[0]);\t\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/tools.js\n// module id = 0\n// module chunks = 0","'use strict';\r\n\r\n// entry point\r\n\r\nimport {model as mock_model} from './fixtures';\r\nimport {draw} from './lib/classes';\r\nimport {moveController} from './lib/controllers';\r\n\r\nlet diagram = draw.classDiagram();\r\nlet model = Object.assign({}, mock_model);\r\n\r\nfunction bindControllers(diagram) {\r\n\tdiagram.children().forEach(function (child) {\r\n\t\t\r\n\t\tchild.on('dragmove', function () {\r\n\t\t\tredrawConnections();\r\n\t\t})\r\n\r\n\t\tchild.on('mouseup', function () {\r\n\t\t\tmodel = moveController(this, model);\r\n\t\t\trebuild();\r\n\t\t});\r\n\t});\r\n}\r\n\r\nfunction redrawConnections() {\r\n\tdiagram.children().forEach(function (child) {\r\n\t\tif (child.getType() === 'Connection') {\r\n\t\t\tchild.redraw();\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction build(model) {\r\n\tdiagram.fromModel(model);\r\n\tbindControllers(diagram);\r\n}\r\n\r\nfunction rebuild() {\r\n\tdiagram.clear();\r\n\tbuild(model);\r\n}\r\n\r\nbuild(model);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/base.js\n// module id = 1\n// module chunks = 0","(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.deepmerge = factory();\n    }\n}(this, function () {\n\nfunction isMergeableObject(val) {\n    var nonNullObject = val && typeof val === 'object'\n\n    return nonNullObject\n        && Object.prototype.toString.call(val) !== '[object RegExp]'\n        && Object.prototype.toString.call(val) !== '[object Date]'\n}\n\nfunction emptyTarget(val) {\n    return Array.isArray(val) ? [] : {}\n}\n\nfunction cloneIfNecessary(value, optionsArgument) {\n    var clone = optionsArgument && optionsArgument.clone === true\n    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value\n}\n\nfunction defaultArrayMerge(target, source, optionsArgument) {\n    var destination = target.slice()\n    source.forEach(function(e, i) {\n        if (typeof destination[i] === 'undefined') {\n            destination[i] = cloneIfNecessary(e, optionsArgument)\n        } else if (isMergeableObject(e)) {\n            destination[i] = deepmerge(target[i], e, optionsArgument)\n        } else if (target.indexOf(e) === -1) {\n            destination.push(cloneIfNecessary(e, optionsArgument))\n        }\n    })\n    return destination\n}\n\nfunction mergeObject(target, source, optionsArgument) {\n    var destination = {}\n    if (isMergeableObject(target)) {\n        Object.keys(target).forEach(function (key) {\n            destination[key] = cloneIfNecessary(target[key], optionsArgument)\n        })\n    }\n    Object.keys(source).forEach(function (key) {\n        if (!isMergeableObject(source[key]) || !target[key]) {\n            destination[key] = cloneIfNecessary(source[key], optionsArgument)\n        } else {\n            destination[key] = deepmerge(target[key], source[key], optionsArgument)\n        }\n    })\n    return destination\n}\n\nfunction deepmerge(target, source, optionsArgument) {\n    var array = Array.isArray(source);\n    var options = optionsArgument || { arrayMerge: defaultArrayMerge }\n    var arrayMerge = options.arrayMerge || defaultArrayMerge\n\n    if (array) {\n        return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument)\n    } else {\n        return mergeObject(target, source, optionsArgument)\n    }\n}\n\ndeepmerge.all = function deepmergeAll(array, optionsArgument) {\n    if (!Array.isArray(array) || array.length < 2) {\n        throw new Error('first argument should be an array with at least two elements')\n    }\n\n    // we are sure there are at least 2 values, so it is safe to have no initial value\n    return array.reduce(function(prev, next) {\n        return deepmerge(prev, next, optionsArgument)\n    })\n}\n\nreturn deepmerge\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/deepmerge/index.js\n// module id = 2\n// module chunks = 0","'use strict';\r\n\r\n// mock elements and connections\r\n\r\nlet element_blueprints = [\r\n\t{\r\n\t\tid: 1,\r\n\t\tposition: {\r\n\t\t\tx: 300,\r\n\t\t\ty: 100\r\n\t\t},\r\n\t\ttext: {\r\n\t\t\tname: 'Person',\r\n\t\t\ttype: 'interface',\r\n\t\t\tattributes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'name',\r\n\t\t\t\t\ttype: 'string',\r\n\t\t\t\t\tvalue: 'Alex',\r\n\t\t\t\t\tscope: 'public'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'age',\r\n\t\t\t\t\ttype: 'int',\r\n\t\t\t\t\tvalue: '100'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'wife',\r\n\t\t\t\t\tscope: 'protected',\r\n\t\t\t\t\ttype: 'any'\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tmethods: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'helloWorld',\r\n\t\t\t\t\ttype: 'int'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'foo',\r\n\t\t\t\t\ttype: 'string',\r\n\t\t\t\t\targs: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: 'name',\r\n\t\t\t\t\t\t\ttype: 'string',\r\n\t\t\t\t\t\t\tvalue: 'Alex'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: 'age',\r\n\t\t\t\t\t\t\ttype: 'int',\r\n\t\t\t\t\t\t\tvalue: '100'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: 'wife',\r\n\t\t\t\t\t\t\ttype: 'any'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: 'wife',\r\n\t\t\t\t\t\t\ttype: 'any'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\tposition: {\r\n\t\t\tx: 600,\r\n\t\t\ty: 300\r\n\t\t},\r\n\t\ttext: {\r\n\t\t\tname: 'Creature',\r\n\t\t\tattributes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'name',\r\n\t\t\t\t\ttype: 'string'\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t}\r\n];\r\n\r\nlet connection_blueprints = [\r\n\t{\r\n\t\tid: 1,\r\n\t\ttype: 'inheritance',\r\n\t\tfrom: 1,\r\n\t\tto: 2,\r\n\t\ttext: 'inherits',\r\n\t\tstyle: {\r\n\t\t\t'stroke-dasharray': '5,5'\r\n\t\t}\r\n\t}\r\n];\r\n\r\nexport let model = {\r\n\telements: element_blueprints,\r\n\tconnections: connection_blueprints\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/fixtures.js\n// module id = 3\n// module chunks = 0","'use strict';\r\n\r\n// classes declarations\r\n\r\nimport {getHash} from './tools';\r\nexport let draw = SVG('diagram');\r\n\r\n\r\n// diagram\r\nimport {\r\n\tsetId as setId_diagram,\r\n\tclear,\r\n\tfromModel,\r\n\tgetNodeById,\r\n} from './diagram';\r\n\r\nSVG.ClassDiagram = SVG.invent({\r\n\tcreate: 'g',\r\n\tinherit: SVG.G,\r\n\textend: {\r\n\t\tsetId: setId_diagram,\r\n\t\tclear: clear,\r\n\t\tfromModel: fromModel,\r\n\t\tgetNodeById: getNodeById,\r\n\t\tgetType: function () {\r\n\t\t\treturn 'Diagram';\r\n\t\t}\r\n\t},\r\n\tconstruct: {\r\n\t\tclassDiagram: function (theme) {\r\n\t\t\treturn this.put(new SVG.ClassDiagram)\r\n\t\t\t\t.addClass('dolphin_diagram dolphin_diagram-class')\r\n\t\t\t\t.setId(getHash())\r\n\t\t\t\t.move(0, 0);\r\n\t\t}\r\n\t}\r\n});\r\n\r\n\r\n// element\r\nimport {\r\n\tapplyBlueprint,\r\n\tgetSocketCoords,\r\n\tsetRichText,\r\n\tdrawBorder,\r\n\treset,\r\n\tsetId as setId_element,\r\n\tgetRect,\r\n\tgetNameLabel,\r\n\tgetTypeLabel,\r\n\tgetAttributesLabel,\r\n\tgetMethodsLabel,\r\n\tclear as clear_element\r\n} from './element';\r\n\r\nSVG.ClassDiagramNode = SVG.invent({\r\n\tcreate: 'g',\r\n\tinherit: SVG.G,\r\n\textend: {\r\n\t\tx2: function() {\r\n\t\t\treturn this.x() + this.getRect().width();\r\n\t\t},\r\n\t\ty2: function () {\r\n\t\t\treturn this.y() + this.getRect().height();\r\n\t\t},\r\n\t\tsetRichText: setRichText,\r\n\t\tdrawBorder: drawBorder,\r\n\t\treset: reset,\r\n\t\tapplyBlueprint: applyBlueprint,\r\n\t\tsocket: getSocketCoords,\r\n\t\tsetId: setId_element,\r\n\t\tgetRect: getRect,\r\n\t\tgetNameLabel: getNameLabel,\r\n\t\tgetTypeLabel: getTypeLabel,\r\n\t\tgetAttributesLabel: getAttributesLabel,\r\n\t\tgetMethodsLabel: getMethodsLabel,\r\n\t\tclear: clear_element,\r\n\t\tgetType: function () {\r\n\t\t\treturn 'DiagramNode';\r\n\t\t},\r\n\t\tblueprint: null,\r\n\t\tstyle: null,\r\n\t\trichText: null\r\n\t},\r\n\tconstruct: {\r\n\t\tclassDiagramNode: function (blueprint) {\r\n\t\t\treturn this.put(new SVG.ClassDiagramNode)\r\n\t\t\t\t.applyBlueprint(blueprint)\r\n\t\t\t\t.addClass('dolphin_node')\r\n\t\t\t\t.draggy();\r\n\t\t}\r\n\t}\r\n});\r\n\r\n\r\n// connection\r\nimport {\r\n\tapplyBlueprint as applyBlueprint_connection,\r\n\tconnectSockets,\r\n\tconnectDots,\r\n\tredraw,\r\n\tclear as clear_connection,\r\n\tsetRichText as setRichText_connection,\r\n\tsetId as setId_connection\r\n} from './connection';\r\n\r\nSVG.Connection = SVG.invent({\r\n\tcreate: 'g',\r\n\tinherit: SVG.G,\r\n\textend: {\r\n\t\tapplyBlueprint: applyBlueprint_connection,\r\n\t\tconnectSockets: connectSockets,\r\n\t\tconnectDots: connectDots,\r\n\t\tredraw: redraw,\r\n\t\tclear: clear_connection,\r\n\t\tsetId: setId_connection,\r\n\t\tsetRichText: setRichText_connection,\r\n\t\tgetType: function () {\r\n\t\t\treturn 'Connection';\r\n\t\t},\r\n\t\tblueprint: null\r\n\t},\r\n\tconstruct: {\r\n\t\tconnection: function (blueprint) {\r\n\t\t\treturn this.put(new SVG.Connection)\r\n\t\t\t\t.applyBlueprint(blueprint);\r\n\t\t}\r\n\t}\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/classes.js\n// module id = 4\n// module chunks = 0","'use strict';\r\n\r\nexport default {\r\n\t'padding-w': '11',\t// element padding\r\n\t'padding-h': '11'\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/config.js\n// module id = 5\n// module chunks = 0","'use strict';\r\n\r\n// methods of Connection class\r\n\r\nimport {arcTo, cubicTo} from './lines';\r\nimport {getId, getHash, getRawId} from '../tools';\r\n\r\nexport function applyBlueprint (blueprint) {\r\n\tthis.blueprint = blueprint;\r\n\r\n\tthis.setId(getHash());\r\n\t// check blueprint here\r\n\tthis.setRichText('Hello');\r\n\tthis.redraw();\r\n\treturn this;\r\n}\r\n\r\nexport function setId(id) {\r\n\treturn this.attr('id', getId('Connection', id));\r\n}\r\n\r\nexport function clear() {\r\n\t// remove everything: the line, labels, arrows...\r\n\tthis.children().forEach(function (child) {\r\n\t\tchild.remove();\r\n\t});\r\n\treturn this;\r\n}\r\n\r\nexport function redraw() {\r\n\tthis.clear();\r\n\r\n\tlet from = this.parent().getNodeById(this.blueprint.from).socket(5);\r\n\tlet to = this.parent().getNodeById(this.blueprint.to).socket(4);\r\n\r\n\tthis.connectDots(from, to);\r\n}\r\n\r\nexport function connectSockets () {\r\n\t// connect two elements' sockets (abstraction over connection by two coordinates)\r\n\treturn this;\r\n}\r\n\r\nexport function setRichText(line_text) {\r\n\t// set connection's rich text: labels, roles, indicators...\r\n\tthis.richText = line_text;\r\n\tthis.redraw();\r\n\treturn this;\r\n}\r\n\r\nexport function connectDots (a, b) {\r\n\t// connect two coordinates with a line\r\n\tlet id = getRawId(this.id());\r\n\tlet richText = this.richText;\r\n\r\n\tlet path = this.path(cubicTo(a, b))\r\n\t\t.attr('id', getId(id))\r\n\t\t.addClass('dolphin_line');\r\n\r\n\tlet text = this.text(function (add) {\r\n\t\tadd.tspan(richText).dy(-5);\r\n\t}).addClass('dolphin_text dolphin_line_text dolphin_line_action');\r\n\r\n\tlet offset = (50 - Math.round((text.bbox().w / path.length()) * 50)) + '%';\r\n\r\n\ttext.path(cubicTo(a, b)).textPath().attr('startOffset', offset);\r\n\r\n\treturn this;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/connection/index.js\n// module id = 6\n// module chunks = 0","'use strict';\r\n\r\n// Get pathes for line drawing\r\n\r\nexport function arcTo(from, to) {\r\n\tvar x_between_from_and_to = from.x + Math.abs(from.x - to.x) / 2;\r\n\r\n\tvar bias = {\r\n\t\tx: from.x,\r\n\t\ty: to.y\r\n\t}\r\n\r\n\treturn cubic(from, to, bias, bias);\r\n}\r\n\r\nexport function cubicTo(from, to) {\r\n\tvar x_between_from_and_to = from.x + Math.abs(from.x - to.x) / 2;\r\n\r\n\tvar bias_1 = {\r\n\t\tx: x_between_from_and_to,\r\n\t\ty: from.y\r\n\t}\r\n\r\n\tvar bias_2 = {\r\n\t\tx: x_between_from_and_to,\r\n\t\ty: to.y\r\n\t}\r\n\r\n\treturn cubic(from, to, bias_1, bias_2);\r\n}\r\n\r\nfunction cubic(from, to, bias_1, bias_2) {\r\n\treturn 'M ' + \r\n\t\tfrom.x.toString() + ' ' + \r\n\t\tfrom.y.toString() + ' ' + \r\n\t\t'C ' +\r\n\t\tbias_1.x.toString() + ' ' + \r\n\t\tbias_1.y.toString() + ' ' +\r\n\t\tbias_2.x.toString() + ' ' + \r\n\t\tbias_2.y.toString() + \r\n\t\t' ' + \r\n\t\tto.x.toString() + ' ' + \r\n\t\tto.y.toString();\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/connection/lines.js\n// module id = 7\n// module chunks = 0","'use strict';\r\n\r\nimport {getRawId} from './tools';\r\n\r\nexport function moveController(node, model) {\r\n\tlet new_model = Object.assign({}, model);\r\n\tlet node_id = getRawId(node.attr('id'));\r\n\tlet new_coords = {\r\n\t\tx: node.x(),\r\n\t\ty: node.y()\r\n\t}\r\n\t\r\n\tnew_model.elements.forEach(function (elem) {\r\n\t\tif (elem.id === node_id) {\r\n\t\t\telem.position = new_coords;\r\n\t\t}\r\n\t});\r\n\r\n\treturn new_model;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/controllers.js\n// module id = 8\n// module chunks = 0","'use strict';\r\n\r\n// methods of ClassDiagram class\r\n\r\nimport {getId, getRawId} from '../tools';\r\n\r\nexport function setId(id) {\r\n\treturn this.attr({\r\n\t\t'id': getId('ClassDiagram', id)\r\n\t});\r\n}\r\n\r\nexport function clear() {\r\n\tthis.children().forEach(function (child) {\r\n\t\tchild.remove();\r\n\t});\r\n\treturn this;\r\n}\r\n\r\nexport function fromModel(model) {\r\n\tlet self = this;\r\n\tmodel.elements.forEach(function (blueprint) {\r\n\t\tself.classDiagramNode(blueprint);\r\n\t});\r\n\r\n\tmodel.connections.forEach(function (blueprint) {\r\n\t\tself.connection(blueprint);\r\n\t})\r\n\r\n\treturn this;\r\n}\r\n\r\nexport function getNodeById(id) {\r\n\tlet found;\r\n\tthis.children().forEach(function (child) {\r\n\t\tif (child.attr('id') === getId('ClassDiagramNode', id)) {\r\n\t\t\tfound = child;\r\n\t\t}\r\n\t})\r\n\r\n\treturn found;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/diagram/index.js\n// module id = 9\n// module chunks = 0","'use strict';\r\n\r\n// Blueprints processing functions\r\n\r\nlet merge = require('deepmerge');\r\nimport {default_blueprint, default_attribute, default_method, default_argument} from './model';\r\n\r\nexport function fillBlueprint(blueprint) {\r\n\t// get blueprint and fill it's empty fields with default values\r\n\tif (checkBlueprint(blueprint)) {\r\n\t\tlet passed_blueprint = blueprint;\r\n\t\tlet desired_blueprint = merge(default_blueprint, blueprint);\r\n\r\n\t\tdesired_blueprint.text.attributes = (desired_blueprint.text.attributes || []).map(function (attribute) {\r\n\t\t\treturn merge(default_attribute, attribute);\r\n\t\t});\r\n\r\n\t\tdesired_blueprint.text.methods = (desired_blueprint.text.methods || []).map(function (method) {\r\n\t\t\treturn merge(default_method, method);\r\n\t\t});\r\n\r\n\t\tif (desired_blueprint.text.methods !== []) {\r\n\r\n\t\t\tdesired_blueprint.text.methods = desired_blueprint.text.methods.map(function (method) {\r\n\t\t\t\tif (method.args !== []) {\r\n\t\t\t\t\tmethod.args = method.args.map(function (argument) {\r\n\t\t\t\t\t\treturn merge(default_argument, argument);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\treturn method;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn desired_blueprint;\t\r\n\t}\r\n}\r\n\r\nfunction checkBlueprint(blueprint) {\r\n\t// check the required parameters\r\n\tif (blueprint.position && blueprint.id) {\r\n\t\treturn true;\r\n\t} else {\r\n\t\tthrow new TypeError('Blueprint error: id and/or coordinates are missing');\r\n\t\treturn false;\r\n\t}\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/element/blueprint.js\n// module id = 10\n// module chunks = 0","'use strict';\r\n\r\n// methods of ClassDiagramNode element\r\n\r\nimport {addAttributes, addMethods} from './text';\r\nimport {fillBlueprint} from './blueprint';\r\nimport {getId, getRawId} from '../tools';\r\n\r\nimport config from '../config';\r\n\r\nexport function getSocketCoords(number) {\r\n\r\n\tswitch (number) {\r\n\t\tcase 1: return {x: this.x(), y: this.y()};\t\t// top left\r\n\t\tcase 2: return {x: this.cx(), y: this.y()};\t\t// top center\r\n\t\tcase 3: return {x: this.x2(), y: this.y()};\t\t// top right\r\n\r\n\t\tcase 4: return {x: this.x(), y: this.cy()};\t\t// middle left\r\n\t\tcase 5: return {x: this.x2(), y: this.cy()};\t// middle right\r\n\r\n\t\tcase 6: return {x: this.x(), y: this.y2()};\t\t// bottom left\r\n\t\tcase 7: return {x: this.cx(), y: this.y2()};\t// bottom center\r\n\t\tcase 8: return {x: this.x2(), y: this.y2()};\t// bottom right\r\n\r\n\t\tdefault:\r\n\t\t\tthrow new RangeError('Wrong socket number (must be from 1 to 8)');\r\n\t}\r\n}\r\n\r\nexport function clear() {\r\n\t// delete everything inside the element\r\n\tthis.children().forEach(function (child) {\r\n\t\tchild.remove();\r\n\t})\r\n}\r\n\r\nexport function reset() {\r\n\t// rebuild element\r\n\tthis.setRichText();\r\n\tthis.drawBorder();\r\n\treturn this;\r\n}\r\n\r\nexport function setRichText() {\r\n\t// set element's rich text: node name, attribures, methods and so on\r\n\tlet id = getRawId(this.attr('id'));\r\n\tlet text = this.richText;\r\n\r\n\tif (!text) {\r\n\t\tthrow new EvalError(\"Couldn't apply rich text: no rich text set\");\r\n\t}\r\n\r\n\tthis.clear();\r\n\r\n\tif (text.type !== 'normal') {\r\n\t\tvar type_label = this.text('<' + text.type + '>')\r\n\t\t\t.attr('id', getId('type-label', id))\r\n\t\t\t.addClass('dolphin_text dolphin_node_type');\r\n\t}\r\n\r\n\tvar name_label = this.text(text.name)\r\n\t\t.attr('id', getId('name-label', id))\r\n\t\t.addClass('dolphin_text dolphin_node_name');\r\n\r\n\tif (text.attributes) {\r\n\t\tvar attributes_label = addAttributes(this, text.attributes)\r\n\t\t\t.attr('id', getId('attributes-label', id))\r\n\t\t\t.addClass('dolphin_text');\r\n\t}\r\n\r\n\tif (text.methods) {\r\n\t\tvar methods_label = addMethods(this, text.methods)\r\n\t\t\t.attr('id', getId('methods-label', id))\r\n\t\t\t.addClass('dolphin_text');\r\n\t}\r\n\r\n\tlet offsets = computeLabelOffsets(this);\r\n\r\n\tif (type_label) {\r\n\t\ttype_label.move(offsets.type.x, offsets.type.y);\r\n\t}\r\n\r\n\tif (name_label) {\r\n\t\tname_label.move(offsets.name.x, offsets.name.y);\r\n\t}\r\n\r\n\tif (attributes_label) {\r\n\t\tattributes_label.move(offsets.attributes.x, offsets.attributes.y);\r\n\t}\r\n\r\n\tif (methods_label) {\r\n\t\tmethods_label.move(offsets.methods.x, offsets.methods.y);\r\n\t}\r\n\r\n\treturn this;\r\n}\r\n\r\nexport function drawBorder() {\r\n\tlet id = getRawId(this.attr('id'));\r\n\tvar rect = this.getRect();\r\n\tvar rect_size = computeRectSize(this);\r\n\t\r\n\tif (rect) {\r\n\r\n\t\trect.size(rect_size.w, rect_size.h);\r\n\r\n\t} else {\r\n\t\trect = this.rect(rect_size.w, rect_size.h)\r\n\t\t\t.move(0, 0)\r\n\t\t\t.attr('id', getId('rectangle', id))\r\n\t\t\t.addClass('dolphin_rect');\r\n\t}\r\n\trect.back();\r\n\r\n\treturn this;\r\n}\r\n\r\nexport function setId(id) {\r\n\treturn this.attr({\r\n\t\t'id': getId('ClassDiagramNode', id)\r\n\t});\r\n}\r\n\r\nexport function applyBlueprint(blueprint) {\r\n\tvar checked_blueprint = fillBlueprint(blueprint);\r\n\tthis.setId(checked_blueprint.id);\r\n\tthis.blueprint = checked_blueprint;\r\n\tthis.richText = checked_blueprint.text;\r\n\tthis.reset();\r\n\tthis.move(checked_blueprint.position.x, checked_blueprint.position.y);\r\n\treturn this;\r\n}\r\n\r\nfunction computeRectSize(element) {\r\n\tlet name_label = element.getNameLabel();\r\n\tlet type_label = element.getTypeLabel();\r\n\tlet attributes_label = element.getAttributesLabel();\r\n\tlet methods_label = element.getMethodsLabel();\r\n\r\n\tlet padding = {\r\n\t\tw: parseInt(config['padding-w']),\r\n\t\th: parseInt(config['padding-h'])\r\n\t};\r\n\r\n\tlet actual_padding = padding;\r\n\r\n\t// let actual_padding = {\r\n\t// \tw: Math.max(\r\n\t// \t\tpadding.w,\r\n\t// \t\telement.style.rect_style.rx\r\n\t// \t),\r\n\r\n\t// \th: Math.max(\r\n\t// \t\tpadding.h,\r\n\t// \t\telement.style.rect_style.ry\r\n\t// \t)\r\n\t// }\r\n\r\n\tlet width = Math.max(\r\n\t\tname_label ? name_label.bbox().w : 0,\r\n\t\ttype_label ? type_label.bbox().w : 0,\r\n\t\tattributes_label ? attributes_label.bbox().w : 0,\r\n\t\tmethods_label ? methods_label.bbox().w : 0\r\n\t) + actual_padding.w * 2;\r\n\r\n\tlet height = (\r\n\t\t(name_label ? name_label.bbox().h : 0) +\r\n\t\t(type_label ? type_label.bbox().h : 0) +\r\n\t\t(attributes_label ? attributes_label.bbox().h : 0) +\r\n\t\t(methods_label ? methods_label.bbox().h : 0)\r\n\t) + actual_padding.h * 2;\t// top and bottom padding\r\n\r\n\tif (attributes_label) {\t// name label is always there, type label doesn't require to be spaced\r\n\t\theight += padding.h;\r\n\t}\r\n\r\n\tif (methods_label) {\r\n\t\theight += padding.h\r\n\t}\r\n\r\n\treturn {\r\n\t\tw: width,\r\n\t\th: height\r\n\t}\r\n}\r\n\r\nfunction computeLabelOffsets(element) {\r\n\tlet name_label = element.getNameLabel();\r\n\tlet type_label = element.getTypeLabel();\r\n\tlet attributes_label = element.getAttributesLabel();\r\n\tlet methods_label = element.getMethodsLabel();\r\n\t\r\n\tlet rect_size = computeRectSize(element);\r\n\tlet offsets = {};\r\n\r\n\tlet padding = {\r\n\t\tw: parseInt(config['padding-w']),\r\n\t\th: parseInt(config['padding-h'])\r\n\t};\r\n\r\n\t// let actual_padding = {\r\n\t// \tw: Math.max(\r\n\t// \t\tpadding.w,\r\n\t// \t\telement.style.rect_style.rx\r\n\t// \t),\r\n\r\n\t// \th: Math.max(\r\n\t// \t\tpadding.h,\r\n\t// \t\telement.style.rect_style.ry\r\n\t// \t)\r\n\t// }\r\n\r\n\tlet actual_padding = padding;\r\n\r\n\tlet x_left = actual_padding.w;\r\n\tlet x_center = rect_size.w / 2;\t\r\n\tlet y_last = actual_padding.h;\r\n\r\n\tif (type_label) {\r\n\t\toffsets.type = {\r\n\t\t\tx: x_center,\r\n\t\t\ty: y_last\r\n\t\t};\r\n\t\ty_last += type_label.bbox().h;\r\n\t}\r\n\r\n\tif (name_label) {\r\n\t\toffsets.name = {\r\n\t\t\tx: x_center,\r\n\t\t\ty: y_last\r\n\t\t};\r\n\t\ty_last += name_label.bbox().h + padding.h;\r\n\t}\r\n\r\n\tif (attributes_label) {\r\n\t\toffsets.attributes = {\r\n\t\t\tx: x_left,\r\n\t\t\ty: y_last\r\n\t\t}\r\n\t\ty_last += attributes_label.bbox().h + padding.h;\r\n\t}\r\n\r\n\tif (methods_label) {\r\n\t\toffsets.methods = {\r\n\t\t\tx: x_left,\r\n\t\t\ty: y_last\r\n\t\t}\r\n\t\ty_last += methods_label.bbox().h + padding.h;\r\n\t}\r\n\r\n\treturn offsets;\r\n}\r\n\r\nexport function getRect() {\r\n\treturn findChildElement(this, 'rectangle');\r\n}\r\n\r\nexport function getNameLabel() {\r\n\treturn findChildElement(this, 'name-label');\r\n}\r\n\r\nexport function getTypeLabel() {\r\n\treturn findChildElement(this, 'type-label');\r\n}\r\n\r\nexport function getAttributesLabel() {\r\n\treturn findChildElement(this, 'attributes-label');\r\n}\r\n\r\nexport function getMethodsLabel() {\r\n\treturn findChildElement(this, 'methods-label');\r\n}\r\n\r\nfunction findChildElement(parent, type) {\r\n\tlet children = findChildElements(parent, type);\r\n\t\r\n\tif (children.length === 1) {\r\n\t\treturn children[0];\r\n\t} else if (children.length > 1) {\r\n\t\tthrow new RangeError('Parent ' + parent.attr('id').split('_')[0] + ' has more than one ' + type);\r\n\t}\r\n}\r\n\r\nfunction findChildElements(parent, type) {\r\n\tlet children = [];\r\n\r\n\tparent.children().forEach(function (child) {\r\n\t\tif (child.attr('id').split('_')[0] === type) {\r\n\t\t\tchildren.push(child);\r\n\t\t}\r\n\t});\r\n\r\n\treturn children;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/element/index.js\n// module id = 11\n// module chunks = 0","'use strict';\r\n\r\n// data models for element\r\n\r\nexport let default_blueprint = {\r\n\tid: 0,\r\n\tposition: {\r\n\t\tx: 0,\r\n\t\ty: 0\r\n\t},\r\n\ttext: {\r\n\t\tname: 'NewClass',\r\n\t\ttype: 'normal',\r\n\t\tattributes: [],\r\n\t\tmethods: []\r\n\t},\r\n};\r\n\r\nexport let default_attribute = {\r\n\tname: 'newElement',\r\n\tvalue: '',\r\n\ttype: 'any',\r\n\tscope: 'public'\r\n};\r\n\r\nexport let default_method = {\r\n\tname: 'newMethod',\r\n\ttype: 'any',\r\n\tscope: 'public',\r\n\targs: []\r\n};\r\n\r\nexport let default_argument = {\r\n\tname: 'newArgument',\r\n\ttype: 'any',\r\n\tvalue: ''\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/element/model.js\n// module id = 12\n// module chunks = 0","'use strict';\r\n\r\n// element text processing\r\n\r\nexport function addAttributes(element, text, style) {\r\n\t// + foo : int = \"bar\"\r\n \r\n\treturn element.text(function (add) {\r\n\t\tfor (let name in text) {\r\n\t\t\tlet value = text[name];\t\t// one attribute\r\n\t\t\tlet addLabel = construct_addLabel(add);\r\n\r\n\t\t\taddLabel(getScopeSymbol(value.scope), 'dolphin_node_scope', 1).newLine();\t// scope\r\n\t\t\taddLabel(value.name, 'dolphin_node_attribute', 1);\t// attribute name\r\n\r\n\t\t\tif (value.type !== 'any') {\r\n\t\t\t\t// if attribute has type\r\n\t\t\t\taddLabel(':', 'dolphin_node_symbol', 2);\r\n\t\t\t\taddLabel(capitalizeFirst(value.type), 'dolphin_node_datatype');\r\n\t\t\t}\r\n\r\n\t\t\tif (value.value) {\r\n\t\t\t\t// if attribute has value\r\n\t\t\t\taddLabel('=', 'dolphin_node_symbol', 2);\r\n\r\n\t\t\t\tswitch (value.type) {\r\n\t\t\t\t\tcase 'string':\r\n\t\t\t\t\t\taddLabel('\"' + value.value + '\"', 'dolphin_node_value dolphin_node_value-string');\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'int':\r\n\t\t\t\t\t\taddLabel(value.value, 'dolphin_node_value dolphin_node_value-int');\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\taddLabel(value.value, 'dolphin_node_value');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}).addClass('dolphin_text');\t// apply general font style\r\n}\r\n\r\nexport function addMethods(element, text, style) {\r\n\t// - string getFoo(\r\n\t// \t\tbar: int,\r\n\t// \t\tfoo: string = \"hello\")\r\n\r\n\treturn element.text(function (add) {\r\n\t\tfor (let name in text) {\r\n\t\t\tlet value = text[name];\r\n\t\t\tlet addLabel = construct_addLabel(add);\r\n\r\n\t\t\taddLabel(getScopeSymbol(value.scope), 'dolphin_node_scope', 1).newLine();\t// scope\r\n\r\n\t\t\tif (value.type !== 'any') {\r\n\t\t\t\taddLabel(capitalizeFirst(value.type), 'dolphin_node_datatype', 1);\r\n\t\t\t}\r\n\r\n\t\t\taddLabel(value.name, 'dolphin_node_method', 1);\t// attribute name\r\n\r\n\t\t\tif (value.args) {\t// if method has arguments\r\n\r\n\t\t\t\tadd.tspan('(');\t\t// open the bracket\r\n\r\n\t\t\t\tfor (let arg in value.args) {\r\n\t\t\t\t\t// get one argument\r\n\r\n\t\t\t\t\tlet argument = value.args[arg];\r\n\r\n\t\t\t\t\taddLabel(argument.name, 'dolphin_node_passed dolphin_node_attribute').newLine().dx(20);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (argument.type !== 'any') {\r\n\t\t\t\t\t\taddLabel(':', 'dolphin_node_passed dolphin_node_symbol', 2);\r\n\t\t\t\t\t\taddLabel(capitalizeFirst(argument.type), 'dolphin_node_passed dolphin_node_datatype');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (argument.value !== '') {\r\n\r\n\t\t\t\t\t\taddLabel('=', 'dolphin_node_passed dolphin_node_symbol', 2);\r\n\r\n\t\t\t\t\t\tswitch (argument.type) {\r\n\t\t\t\t\t\t\tcase 'string':\r\n\t\t\t\t\t\t\t\taddLabel('\"' + argument.value + '\"', 'dolphin_node_passed dolphin_node_value dolphin_node_value-string');\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'int':\r\n\t\t\t\t\t\t\t\taddLabel(argument.value, 'dolphin_node_passed dolphin_node_value dolphin_node_value-int');\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\taddLabel(argument.value, 'dolphin_node_passed dolphin_node_value');\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (arg < value.args.length - 1) {\r\n\t\t\t\t\t\taddLabel(',', 'dolphin_node_passed');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\taddLabel(')');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// otherwise just close the method with ()\r\n\t\t\t\taddLabel('()');\r\n\t\t\t}\r\n\t\t}\r\n\t}).addClass('dolphin_text');\r\n}\r\n\r\nfunction construct_addLabel(add) {\r\n\treturn function (text, classes, spacing) {\r\n\t\tif (spacing) {\r\n\t\t\tif (spacing === 1) {\r\n\r\n\t\t\t\tlet tspan = add.tspan(text)\r\n\t\t\t\t\t.addClass(classes || '');\r\n\t\t\t\tadd.tspan(' ');\r\n\r\n\t\t\t\treturn tspan;\r\n\r\n\t\t\t} else if (spacing === 2) {\r\n\t\t\t\t\r\n\t\t\t\tadd.tspan(' ');\r\n\t\t\t\tlet tspan = add.tspan(text)\r\n\t\t\t\t\t.addClass(classes || '');\r\n\t\t\t\tadd.tspan(' ');\r\n\r\n\t\t\t\treturn tspan;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthrow new RangeError('Wrong spacing: ' + spacing);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn add.tspan(text)\r\n\t\t\t\t.addClass(classes || '');\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getScopeSymbol(scope) {\r\n\tswitch (scope.toLowerCase()) {\r\n\t\tcase 'public':\r\n\t\t\treturn '+';\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'private':\r\n\t\t\treturn '-';\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'protected':\r\n\t\t\treturn '#';\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'derived':\r\n\t\t\treturn '/';\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'package':\r\n\t\t\treturn '~';\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tthrow new TypeError('Unknown scope: ' + scope);\r\n\t}\r\n}\r\n\r\nfunction capitalizeFirst(word) {\r\n\treturn word.slice(0, 1).toUpperCase() + word.slice(1).toLowerCase();\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/element/text.js\n// module id = 13\n// module chunks = 0"],"sourceRoot":""}