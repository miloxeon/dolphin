{"version":3,"sources":["webpack:///webpack/bootstrap 1e0d506315752aa9d418","webpack:///./~/deepmerge/index.js","webpack:///./src/lib/tools.js","webpack:///./src/base.js","webpack:///./src/lib/element/blueprint.js","webpack:///./src/lib/element/index.js","webpack:///./src/lib/element/model.js","webpack:///./src/lib/element/style.js","webpack:///./src/lib/element/text.js","webpack:///./src/lib/theme/model.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,sCAAsC;AACtC;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA,CAAC;;;;;;;;;;;;;;;ACnFD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;AAGA,EAAE;AACF;AACA;AACA;AACA;;;;;;;;;;ACjEA;;AAE6E;;AAE7E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;;AAEA,CAAC;;AAED;;;;;;;;;;ACpNA;;AAEA;;AAEA;AAC+E;;AAE/E;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;;AAEA,2B;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC3CA;;AAEA;;AAE4B;AACM;AACZ;AACC;;;AAGvB;;AAEA;;AAEA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA,kBAAkB,sBAAsB;AACxC,kBAAkB,uBAAuB;AACzC,kBAAkB,uBAAuB;;AAEzC,kBAAkB,uBAAuB;AACzC,kBAAkB,wBAAwB;;AAE1C,kBAAkB,uBAAuB;AACzC,kBAAkB,wBAAwB;AAC1C,kBAAkB,wBAAwB;;AAE1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oHAA6C;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;;;;;;;;;;;ACnRA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACpCA;;AAEA;;AAEA;AACoB;AAC4C;;AAEhE;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,8FAA8F,cAAc;;AAE5G;AACA;AACA,IAAI;;AAEJ,GAAG;AACH;AACA;AACA;;AAEA;AACA;;;;;;;;;;AC1IA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B;;AAE1B,2EAA2E;AAC3E;;AAEA,+CAA+C;AAC/C;;AAEA;AACA;AACA;AACA,uEAAuE;AACvE;;AAEA;AACA;;AAEA,2CAA2C;AAC3C;;AAEA;AACA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAE,0BAA0B;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA,kCAAkC;;AAElC;AACA;AACA;;AAEA,6EAA6E;AAC7E;;AAEA;AACA,mEAAmE;AACnE;AACA;AACA,iDAAiD;AACjD;;AAEA,oBAAoB;;AAEpB,2CAA2C;;AAE3C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;;AAEd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sEAAsE;AACtE;;AAEA,uCAAuC;;AAEvC;AACA;AACA;;AAEA,OAAO;;AAEP;AACA;AACA;;AAEA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA,IAAI;AACJ;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;ACtKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1e0d506315752aa9d418","(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.deepmerge = factory();\n    }\n}(this, function () {\n\nfunction isMergeableObject(val) {\n    var nonNullObject = val && typeof val === 'object'\n\n    return nonNullObject\n        && Object.prototype.toString.call(val) !== '[object RegExp]'\n        && Object.prototype.toString.call(val) !== '[object Date]'\n}\n\nfunction emptyTarget(val) {\n    return Array.isArray(val) ? [] : {}\n}\n\nfunction cloneIfNecessary(value, optionsArgument) {\n    var clone = optionsArgument && optionsArgument.clone === true\n    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value\n}\n\nfunction defaultArrayMerge(target, source, optionsArgument) {\n    var destination = target.slice()\n    source.forEach(function(e, i) {\n        if (typeof destination[i] === 'undefined') {\n            destination[i] = cloneIfNecessary(e, optionsArgument)\n        } else if (isMergeableObject(e)) {\n            destination[i] = deepmerge(target[i], e, optionsArgument)\n        } else if (target.indexOf(e) === -1) {\n            destination.push(cloneIfNecessary(e, optionsArgument))\n        }\n    })\n    return destination\n}\n\nfunction mergeObject(target, source, optionsArgument) {\n    var destination = {}\n    if (isMergeableObject(target)) {\n        Object.keys(target).forEach(function (key) {\n            destination[key] = cloneIfNecessary(target[key], optionsArgument)\n        })\n    }\n    Object.keys(source).forEach(function (key) {\n        if (!isMergeableObject(source[key]) || !target[key]) {\n            destination[key] = cloneIfNecessary(source[key], optionsArgument)\n        } else {\n            destination[key] = deepmerge(target[key], source[key], optionsArgument)\n        }\n    })\n    return destination\n}\n\nfunction deepmerge(target, source, optionsArgument) {\n    var array = Array.isArray(source);\n    var options = optionsArgument || { arrayMerge: defaultArrayMerge }\n    var arrayMerge = options.arrayMerge || defaultArrayMerge\n\n    if (array) {\n        return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument)\n    } else {\n        return mergeObject(target, source, optionsArgument)\n    }\n}\n\ndeepmerge.all = function deepmergeAll(array, optionsArgument) {\n    if (!Array.isArray(array) || array.length < 2) {\n        throw new Error('first argument should be an array with at least two elements')\n    }\n\n    // we are sure there are at least 2 values, so it is safe to have no initial value\n    return array.reduce(function(prev, next) {\n        return deepmerge(prev, next, optionsArgument)\n    })\n}\n\nreturn deepmerge\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/deepmerge/index.js\n// module id = 0\n// module chunks = 0","'use strict';\r\n\r\nexport function getHash(object_type) {\r\n\treturn Math.floor(Math.random() * new Date()).toString();\r\n}\r\n\r\nexport function getId(object_type, hash) {\r\n\treturn object_type.toString() + '_' + hash;\r\n}\r\n\r\nexport function xor(arr) {\r\n\tvar all_false = Array(arr.length).fill('0').join('');\r\n\tvar all_true = Array(arr.length).fill('1').join('');\r\n\tvar arr_str = arr.map(function (elem) {\r\n\t\treturn elem ? '1' : '0';\r\n\t}).join('');\r\n\r\n\treturn (arr_str !== all_false && arr_str !== all_true);\r\n}\r\n\r\nexport function isComplexObject(object) {\r\n\tvar obj_str = [];\r\n\tfor (let name in object) {\r\n\t\tif (isObject(object[name])) {\r\n\t\t\tobj_str.push(true);\r\n\t\t} else {\r\n\t\t\tobj_str.push(false);\r\n\t\t}\r\n\t}\r\n\treturn xor(obj_str);\r\n}\r\n\r\nexport function isObject(variable) {\r\n\treturn (variable !== null) && (typeof variable === 'object');\r\n}\r\n\r\nexport function isNested(object) {\r\n\tfor (let name in object) {\r\n\t\tif (!isObject(object[name])) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nexport function convertObject(object, converter) {\r\n\tlet new_object = {};\r\n\r\n\tif (!isComplexObject(object)) {\r\n\r\n\t\tif (isNested(object)) {\r\n\t\t\tfor (let name in object) {\r\n\t\t\t\tnew_object[name] = convertObject(object[name], converter);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tnew_object = converter(object);\r\n\t\t}\r\n\r\n\t\treturn new_object;\r\n\r\n\t\t\r\n\t} else {\r\n\t\tconsole.log(object);\r\n\t\tthrow new TypeError(\"Couldn't convert a complex object\");\r\n\t}\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/tools.js\n// module id = 1\n// module chunks = 0","'use strict';\r\n\r\nimport {applyBlueprint, getSocketCoords, setRichText, drawBorder, applyTheme} from './lib/element';\r\n\r\nvar draw = SVG('diagram');\r\n\r\nlet element_blueprints = [\r\n\t{\r\n\t\tid: 1,\r\n\t\tposition: {\r\n\t\t\tx: 200,\r\n\t\t\ty: 100\r\n\t\t},\r\n\t\ttext: {\r\n\t\t\tname: 'Person',\r\n\t\t\ttype: 'interface',\r\n\t\t\tattributes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'name',\r\n\t\t\t\t\ttype: 'string',\r\n\t\t\t\t\tvalue: 'Alex',\r\n\t\t\t\t\tscope: 'public'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'age',\r\n\t\t\t\t\ttype: 'int',\r\n\t\t\t\t\tvalue: '100'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'wife',\r\n\t\t\t\t\tscope: 'package',\r\n\t\t\t\t\ttype: 'any'\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tmethods: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'helloWorld',\r\n\t\t\t\t\ttype: 'int'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'foo',\r\n\t\t\t\t\ttype: 'string',\r\n\t\t\t\t\targs: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: 'name',\r\n\t\t\t\t\t\t\ttype: 'string',\r\n\t\t\t\t\t\t\tvalue: 'Alex'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: 'age',\r\n\t\t\t\t\t\t\ttype: 'int',\r\n\t\t\t\t\t\t\tvalue: '100'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: 'wife',\r\n\t\t\t\t\t\t\ttype: 'any'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\tposition: {\r\n\t\t\tx: 400,\r\n\t\t\ty: 300\r\n\t\t},\r\n\t\ttext: {\r\n\t\t\tname: 'Creature',\r\n\t\t\tattributes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'name',\r\n\t\t\t\t\ttype: 'string'\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t}\r\n];\r\n\r\nlet connection_blueprints = [\r\n\t{\r\n\t\tid: 1,\r\n\t\ttype: 'inheritance',\r\n\t\tfrom: 1,\r\n\t\tto: 2,\r\n\t\ttext: 'inherits',\r\n\t\tstyle: {\r\n\t\t\t'stroke-dasharray': '5,5'\r\n\t\t}\r\n\t}\r\n];\r\n\r\nSVG.ClassDiagramNode = SVG.invent({\r\n\tcreate: 'g',\r\n\tinherit: SVG.G,\r\n\textend: {\r\n\t\tsetRichText: setRichText,\r\n\t\tdrawBorder: drawBorder,\r\n\t\tapplyTheme: applyTheme,\r\n\t\tapplyBlueprint: applyBlueprint,\r\n\t\tsocket: getSocketCoords,\r\n\t\tblueprint: null,\r\n\t\tstyle: null,\r\n\t\trichText: null\r\n\t},\r\n\tconstruct: {\r\n\t\tclassDiagramNode: function (blueprint) {\r\n\t\t\treturn this.put(new SVG.ClassDiagramNode)\r\n\t\t\t\t.applyBlueprint(blueprint)\r\n\t\t\t\t.draggy();\r\n\t\t}\r\n\t}\r\n});\r\n\r\nSVG.Connection = SVG.invent({\r\n\tcreate: 'path',\r\n\tinherit: SVG.Path,\r\n\textend: {\r\n\t\tconnect: function (blueprint) {\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tapplyBlueprint: function (blueprint) {\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tblueprint: null\r\n\t},\r\n\tconstruct: {\r\n\t\tconnection: function (blueprint) {\r\n\t\t\treturn this.put(new SVG.Connection)\r\n\t\t\t\t.applyBlueprint(blueprint);\r\n\t\t}\r\n\t}\r\n});\r\n\r\nSVG.ClassDiagram = SVG.invent({\r\n\tcreate: 'g',\r\n\tinherit: SVG.G,\r\n\textend: {\r\n\t\tapplyTheme: function (theme) {\r\n\t\t\tthis.children().forEach(function (child) {\r\n\t\t\t\tchild.applyTheme(theme);\r\n\t\t\t});\r\n\t\t\treturn this;\r\n\t\t}\r\n\t},\r\n\tconstruct: {\r\n\t\tclassDiagram: function (theme) {\r\n\t\t\treturn this.put(new SVG.ClassDiagram)\r\n\t\t\t\t.applyTheme(theme);\r\n\t\t\t\t// .addClass('class_diagram');\r\n\t\t}\r\n\t}\r\n});\r\n\r\nlet diagram = draw.classDiagram().move(0, 0);\r\n\r\nelement_blueprints.forEach(function (blueprint) {\r\n\tdiagram.classDiagramNode(blueprint);\r\n});\r\n\r\n// connection_blueprints.forEach(function (blueprint) {\r\n// \tdiagram.connection(blueprint);\r\n// });\r\n// \r\nlet themes = [\r\n\t{\r\n\t\ttext_style: {\r\n\t\t\tcommon: {\r\n\t\t\t\t'color': 'red'\r\n\t\t\t},\r\n\t\t\tattribute: {\r\n\t\t\t\ttype: {\r\n\t\t\t\t\t'color': 'black',\r\n\t\t\t\t\t'font-weight': 'bold'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\trect_style: {\r\n\t\t\t'background-color': 'rgba(255, 0, 0, .4)',\r\n\t\t\t'border-radius': '18'\r\n\t\t},\r\n\t\ttext_style: {\r\n\t\t\tcommon: {\r\n\t\t\t\t'color': 'yellow'\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\trect_style: {\r\n\t\t\t'background-color': 'rgba(0, 255, 0, .4)',\r\n\t\t\t'border-radius': '8',\r\n\t\t\t'border-width': '1'\r\n\t\t}\r\n\t}\r\n];\r\n\r\nlet i = 0;\r\n\r\nsetInterval(function () {\r\n\tdiagram.applyTheme(themes[i]);\r\n\r\n\tif (i === themes.length - 1) {\r\n\t\ti = 0;\r\n\t} else {\r\n\t\ti++;\r\n\t}\r\n\r\n}, 2000);\r\n\r\nconsole.log(diagram.children());\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/base.js\n// module id = 2\n// module chunks = 0","'use strict';\r\n\r\n// Blueprints processing functions\r\n\r\nlet merge = require('deepmerge');\r\nimport {default_blueprint, default_attribute, default_method, default_argument} from './model';\r\n\r\nexport function fillBlueprint(blueprint) {\r\n\tif (checkBlueprint(blueprint)) {\r\n\t\tlet passed_blueprint = blueprint;\r\n\t\tlet desired_blueprint = merge(default_blueprint, blueprint);\r\n\r\n\t\tdesired_blueprint.text.attributes = (desired_blueprint.text.attributes || []).map(function (attribute) {\r\n\t\t\treturn merge(default_attribute, attribute);\r\n\t\t});\r\n\r\n\t\tdesired_blueprint.text.methods = (desired_blueprint.text.methods || []).map(function (method) {\r\n\t\t\treturn merge(default_method, method);\r\n\t\t});\r\n\r\n\t\tif (desired_blueprint.text.methods !== []) {\r\n\r\n\t\t\tdesired_blueprint.text.methods = desired_blueprint.text.methods.map(function (method) {\r\n\t\t\t\tif (method.args !== []) {\r\n\t\t\t\t\tmethod.args = method.args.map(function (argument) {\r\n\t\t\t\t\t\treturn merge(default_argument, argument);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\treturn method;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn desired_blueprint;\t\r\n\t}\r\n}\r\n\r\nfunction checkBlueprint(blueprint) {\r\n\tif (blueprint.position && blueprint.id) {\r\n\t\treturn true;\r\n\t} else {\r\n\t\tthrow new TypeError('Blueprint error: id and/or coordinates are missing');\r\n\t\treturn false;\r\n\t}\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/element/blueprint.js\n// module id = 3\n// module chunks = 0","'use strict';\r\n\r\n// Everything needed to construct an element\r\n\r\nimport {convertElementStyle} from './style';\r\nimport {addAttributes, addMethods} from './text';\r\nimport {fillBlueprint} from './blueprint';\r\nimport {getHash, getId} from '../tools';\r\n\r\n\r\nexport function getSocketCoords(number) {\r\n\r\n\tlet rect;\r\n\r\n\tthis.children().forEach(function (child) {\r\n\t\tif (child.attr('id').split('_')[0] === 'rectangle') {\r\n\t\t\trect = child;\r\n\t\t}\r\n\t});\r\n\r\n\tif (rect) {\r\n\t\tvar bbox = rect.bbox();\r\n\t} else {\r\n\t\tthrow new ReferenceError(\"Element's rectangle is not defined, couldn't attach sockets\");\r\n\t}\r\n\r\n\tswitch (number) {\r\n\t\tcase 1: return {x: bbox.x, y: bbox.y};\t\t// top left\r\n\t\tcase 2: return {x: bbox.cx, y: bbox.y};\t\t// top center\r\n\t\tcase 3: return {x: bbox.x2, y: bbox.y};\t\t// top right\r\n\r\n\t\tcase 4: return {x: bbox.x, y: bbox.cy};\t\t// middle left\r\n\t\tcase 5: return {x: bbox.x2, y: bbox.cy};\t// middle right\r\n\r\n\t\tcase 6: return {x: bbox.x, y: bbox.y2};\t\t// bottom left\r\n\t\tcase 7: return {x: bbox.cx, y: bbox.y2};\t// bottom center\r\n\t\tcase 8: return {x: bbox.x2, y: bbox.y2};\t// bottom right\r\n\r\n\t\tdefault:\r\n\t\t\tthrow new RangeError('Wrong socket number (must be from 1 to 8)');\r\n\t}\r\n}\r\n\r\nexport function setRichText() {\r\n\tlet id = getRawId(this.attr('id'));\r\n\tlet style = this.style;\r\n\tlet text = this.richText;\r\n\r\n\tif (!text) {\r\n\t\tthrow new EvalError(\"Couldn't apply rich text: no rich text set\");\r\n\t}\r\n\r\n\tif (!style) {\r\n\t\tthrow new EvalError(\"Couldn't apply rich text: no theme set\");\r\n\t}\r\n\r\n\tvar name_label = findChildElement(this, 'name-label');\r\n\tvar type_label = findChildElement(this, 'type-label');\r\n\tvar attributes_label = findChildElement(this, 'attributes-label');\r\n\tvar methods_label = findChildElement(this, 'methods-label');\r\n\r\n\tif (name_label) {\r\n\t\tname_label.remove();\r\n\t}\r\n\r\n\tif (type_label) {\r\n\t\ttype_label.remove();\r\n\t}\r\n\r\n\tif (attributes_label) {\r\n\t\tattributes_label.remove();\r\n\t}\r\n\r\n\tif (methods_label) {\r\n\t\tmethods_label.remove();\r\n\t}\r\n\r\n\tif (text.type !== 'normal') {\r\n\t\ttype_label = this.text('<' + text.type + '>')\r\n\t\t\t.font(style.text_style.common)\r\n\t\t\t.font(style.text_style.node.common)\r\n\t\t\t.font(style.text_style.node.type)\r\n\t\t\t.font('anchor', 'middle')\r\n\t\t\t.attr('id', getId('type-label', id));\r\n\t}\r\n\r\n\tname_label = this.text(text.name)\r\n\t\t.font(style.text_style.common)\r\n\t\t.font(style.text_style.node.common)\r\n\t\t.font(style.text_style.node.name)\r\n\t\t.font('anchor', 'middle')\r\n\t\t.attr('id', getId('name-label', id));\r\n\r\n\tif (text.attributes) {\r\n\t\tattributes_label = addAttributes(this, text.attributes, style.text_style)\r\n\t\t\t.font(style.text_style.common)\r\n\t\t\t.attr('id', getId('attributes-label', id));\r\n\t}\r\n\r\n\tif (text.methods) {\r\n\t\tmethods_label = addMethods(this, text.methods, style.text_style)\r\n\t\t\t.font(style.text_style.common)\r\n\t\t\t.attr('id', getId('methods-label', id));\r\n\t}\r\n\r\n\tlet offsets = computeLabelOffsets(this);\r\n\r\n\tif (type_label) {\r\n\t\ttype_label.move(offsets.type.x, offsets.type.y);\r\n\t}\r\n\r\n\tif (name_label) {\r\n\t\tname_label.move(offsets.name.x, offsets.name.y);\r\n\t}\r\n\r\n\tif (attributes_label) {\r\n\t\tattributes_label.move(offsets.attributes.x, offsets.attributes.y);\r\n\t}\r\n\r\n\tif (methods_label) {\r\n\t\tmethods_label.move(offsets.methods.x, offsets.methods.y);\r\n\t}\r\n\r\n\treturn this;\r\n}\r\n\r\nexport function drawBorder() {\r\n\tlet id = getRawId(this.attr('id'));\r\n\tlet style = this.style;\r\n\r\n\tvar rect = findChildElement(this, 'rectangle');\r\n\tvar rect_size = computeRectSize(this);\r\n\t\r\n\tif (rect) {\r\n\t\trect.size(rect_size.w, rect_size.h)\r\n\t\t\t.attr(style.rect_style);\r\n\t} else {\r\n\t\trect = this.rect(rect_size.w, rect_size.h)\r\n\t\t\t.attr(style.rect_style)\r\n\t\t\t.move(0, 0)\r\n\t\t\t.attr('id', getId('rectangle', id));\r\n\t}\r\n\r\n\trect.back();\r\n\treturn this;\r\n}\r\n\r\nexport function applyTheme(theme) {\r\n\tthis.style = convertElementStyle(theme || {});\r\n\tthis.setRichText();\r\n\tthis.drawBorder();\r\n\treturn this;\r\n}\r\n\r\nexport function applyBlueprint(blueprint) {\r\n\tvar checked_blueprint = fillBlueprint(blueprint);\r\n\tlet id = checked_blueprint.id;\r\n\tlet style = checked_blueprint.style;\r\n\tthis.attr({\r\n\t\t'id': getId('ClassDiagramNode', id),\r\n\t\t'cursor': 'pointer'\r\n\t});\r\n\t\r\n\tthis.richText = checked_blueprint.text;\r\n\tthis.blueprint = checked_blueprint;\r\n\r\n\tthis.applyTheme(style);\r\n\tthis.move(checked_blueprint.position.x, checked_blueprint.position.y);\r\n\r\n\treturn this;\r\n}\r\n\r\nfunction getRawId(element_id) {\r\n\treturn element_id.split('_')[1];\r\n}\r\n\r\nfunction computeRectSize(element) {\r\n\tlet name_label = findChildElement(element, 'name-label');\r\n\tlet type_label = findChildElement(element, 'type-label');\r\n\tlet attributes_label = findChildElement(element, 'attributes-label');\r\n\tlet methods_label = findChildElement(element, 'methods-label');\r\n\r\n\tlet width = Math.max(\r\n\t\tname_label ? name_label.bbox().w : 0,\r\n\t\ttype_label ? type_label.bbox().w : 0,\r\n\t\tattributes_label ? attributes_label.bbox().w : 0,\r\n\t\tmethods_label ? methods_label.bbox().w : 0\r\n\t) + element.style.additional_style.padding.w * 2;\r\n\r\n\tlet height = (\r\n\t\t(name_label ? name_label.bbox().h : 0) +\r\n\t\t(type_label ? type_label.bbox().h : 0) +\r\n\t\t(attributes_label ? attributes_label.bbox().h : 0) +\r\n\t\t(methods_label ? methods_label.bbox().h : 0)\r\n\t) + (\r\n\t\t(name_label ? 1 : 0) +\r\n\t\t(attributes_label ? 1 : 0) +\r\n\t\t(methods_label ? 1 : 0) + 1\r\n\t) * element.style.additional_style.padding.h;\r\n\r\n\treturn {\r\n\t\tw: width,\r\n\t\th: height\r\n\t}\r\n}\r\n\r\nfunction computeLabelOffsets(element) {\r\n\tlet name_label = findChildElement(element, 'name-label');\r\n\tlet type_label = findChildElement(element, 'type-label');\r\n\tlet attributes_label = findChildElement(element, 'attributes-label');\r\n\tlet methods_label = findChildElement(element, 'methods-label');\r\n\t\r\n\tlet padding = element.style.additional_style.padding;\r\n\tlet rect_size = computeRectSize(element);\r\n\tlet offsets = {};\r\n\r\n\tlet x_left = padding.w;\r\n\tlet x_center = rect_size.w / 2;\t\r\n\tlet y_last = padding.h;\r\n\r\n\tif (type_label) {\r\n\t\toffsets.type = {\r\n\t\t\tx: x_center,\r\n\t\t\ty: y_last\r\n\t\t};\r\n\t\ty_last += type_label.bbox().h;\r\n\t}\r\n\r\n\tif (name_label) {\r\n\t\toffsets.name = {\r\n\t\t\tx: x_center,\r\n\t\t\ty: y_last\r\n\t\t};\r\n\t\ty_last += name_label.bbox().h + padding.h;\r\n\t}\r\n\r\n\tif (attributes_label) {\r\n\t\toffsets.attributes = {\r\n\t\t\tx: x_left,\r\n\t\t\ty: y_last\r\n\t\t}\r\n\t\ty_last += attributes_label.bbox().h + padding.h;\r\n\t}\r\n\r\n\tif (methods_label) {\r\n\t\toffsets.methods = {\r\n\t\t\tx: x_left,\r\n\t\t\ty: y_last\r\n\t\t}\r\n\t\ty_last += methods_label.bbox().h + padding.h;\r\n\t}\r\n\r\n\treturn offsets;\r\n}\r\n\r\nfunction findChildElement(parent, type) {\r\n\tlet children = findChildElements(parent, type);\r\n\t\r\n\tif (children.length === 1) {\r\n\t\treturn children[0];\r\n\t} else if (children.length > 1) {\r\n\t\tthrow new RangeError('Parent ' + parent.attr('id').split('_')[0] + ' has more than one ' + type);\r\n\t}\r\n}\r\n\r\nfunction findChildElements(parent, type) {\r\n\tlet children = [];\r\n\r\n\tparent.children().forEach(function (child) {\r\n\t\tif (child.attr('id').split('_')[0] === type) {\r\n\t\t\tchildren.push(child);\r\n\t\t}\r\n\t});\r\n\r\n\treturn children;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/element/index.js\n// module id = 4\n// module chunks = 0","'use strict';\r\n\r\n// data models for element\r\n\r\nexport let default_blueprint = {\r\n\tid: 0,\r\n\tposition: {\r\n\t\tx: 0,\r\n\t\ty: 0\r\n\t},\r\n\ttext: {\r\n\t\tname: 'NewClass',\r\n\t\ttype: 'normal',\r\n\t\tattributes: [],\r\n\t\tmethods: []\r\n\t},\r\n};\r\n\r\nexport let default_attribute = {\r\n\tname: 'newElement',\r\n\tvalue: '',\r\n\ttype: 'any',\r\n\tscope: 'public'\r\n};\r\n\r\nexport let default_method = {\r\n\tname: 'newMethod',\r\n\ttype: 'any',\r\n\tscope: 'public',\r\n\targs: []\r\n};\r\n\r\nexport let default_argument = {\r\n\tname: 'newArgument',\r\n\ttype: 'any',\r\n\tvalue: ''\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/element/model.js\n// module id = 5\n// module chunks = 0","'use strict';\r\n\r\n// convert CSS-like style to SVG-like\r\n\r\nlet merge = require('deepmerge');\r\nimport {class_theme} from '../theme/model';\r\nimport {xor, isComplexObject, isNested, isObject, convertObject} from '../tools';\r\n\r\nexport function convertElementStyle(passed_style) {\r\n\tlet merged_style = merge(class_theme, passed_style);\r\n\tlet converted_style = convertObject(merged_style, convertStyle);\r\n\r\n\tlet additional_style = {\r\n\t\tpadding: Object.assign({}, converted_style.rect_style.padding)\r\n\t}\r\n\r\n\tdelete converted_style.rect_style.padding;\r\n\r\n\tlet element_style = {\r\n\t\trect_style: converted_style.rect_style,\r\n\t\ttext_style: converted_style.text_style,\r\n\t\tadditional_style: additional_style\r\n\t}\r\n\r\n\treturn element_style;\r\n}\r\n\r\nfunction getValueError(name, value, accepted) {\r\n\treturn new RangeError(\r\n\t\t'Wrong ' + \r\n\t\tname.toString() + ': ' + \r\n\t\tvalue.toString() + \r\n\t\t'. Must be ' + \r\n\t\taccepted.map(function (val) {\r\n\t\t\treturn '`' + val.toString() + '`';\r\n\t\t}).join(' or ') + '.');\r\n}\r\n\r\nfunction getDefaultConverter(name, accepted) {\r\n\treturn function(value) {\r\n\t\tlet found = false;\r\n\r\n\t\tfor (let acc in accepted) {\r\n\t\t\tif (value === accepted[acc]) {\r\n\t\t\t\tfound = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!found) {\r\n\t\t\tthrow getValueError(name, value, accepted);\r\n\t\t} else {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction convertStyle(style) {\r\n\tlet decision_matrix = {\r\n\t\t'padding': {\r\n\t\t\tname: 'padding',\r\n\t\t\tconverter: function (value) {\r\n\t\t\t\tlet split_value = value.split(' ');\r\n\t\t\t\treturn {\r\n\t\t\t\t\tw: parseInt(split_value[1]),\r\n\t\t\t\t\th: parseInt(split_value[0])\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t'border-color': {\r\n\t\t\tname: 'stroke'\r\n\t\t},\r\n\t\t'border-width': {\r\n\t\t\tname: 'stroke-width',\r\n\t\t\tconverter: parseInt\r\n\t\t},\r\n\t\t'border-radius': {\r\n\t\t\tname: ['rx', 'ry'],\r\n\t\t\tconverter: parseInt\r\n\t\t},\r\n\t\t'color': {\r\n\t\t\tname: 'fill'\r\n\t\t},\r\n\t\t'font-family': {\r\n\t\t\tname: 'family'\r\n\t\t},\r\n\t\t'font-size': {\r\n\t\t\tname: 'size',\r\n\t\t\tconverter: parseInt\r\n\t\t},\r\n\t\t'font-style': {\r\n\t\t\tname: 'style',\r\n\t\t\tconverter: getDefaultConverter('font-style', ['normal', 'italic'])\r\n\t\t},\r\n\t\t'font-weight': {\r\n\t\t\tname: 'weight',\r\n\t\t\tconverter: getDefaultConverter('font-weight', ['normal', 'bold'])\r\n\t\t},\r\n\t\t'text-align': {\r\n\t\t\tname: 'anchor',\r\n\t\t\tconverter: function (value) {\r\n\t\t\t\tif (value === 'left') {\r\n\t\t\t\t\treturn 'start';\r\n\t\t\t\t} else if (value === 'center') {\r\n\t\t\t\t\treturn 'middle';\r\n\t\t\t\t} else if (value === 'right') {\r\n\t\t\t\t\treturn 'end';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow getValueError('text-align', value, ['left', 'center', 'right']);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t'line-height': {\r\n\t\t\tname: 'leading',\r\n\t\t\tconverter: parseFloat\r\n\t\t},\r\n\t\t'background-color': {\r\n\t\t\tname: 'fill'\r\n\t\t}\r\n\t};\r\n\r\n\tlet converted_style = {};\r\n\r\n\tfor (let parameter in style) {\r\n\t\tif (decision_matrix[parameter]) {\r\n\r\n\t\t\tlet parameter_names = [].concat(decision_matrix[parameter].name);\r\n\t\t\tlet parameter_convert_function = decision_matrix[parameter].converter || function (value) { return value; }\r\n\r\n\t\t\tparameter_names.forEach(function (parameter_name) {\r\n\t\t\t\tconverted_style[parameter_name] = parameter_convert_function(style[parameter]);\r\n\t\t\t})\r\n\r\n\t\t} else {\r\n\t\t\tthrow new TypeError('Wrong attribute name: ' + parameter.toString());\r\n\t\t}\r\n\t}\r\n\r\n\treturn converted_style;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/element/style.js\n// module id = 6\n// module chunks = 0","'use strict';\r\n\r\n// element text processing\r\n\r\nvar merge = require('deepmerge');\r\n\r\nexport function addAttributes(element, text, style) {\r\n\t// + foo : int = \"bar\"\r\n\t// \r\n\tlet attr_style = style.attribute;\r\n\r\n\treturn element.text(function (add) {\r\n\t\tfor (let name in text) {\r\n\t\t\tlet value = text[name];\t\t// one attribute\r\n\r\n\t\t\tadd.tspan(getScopeSymbol(value.scope)).font(attr_style.scope).newLine();\t// add scope symbol\r\n\t\t\tadd.tspan(' ');\r\n\r\n\t\t\tadd.tspan(value.name).font(attr_style.name);\t// add attibute's name\r\n\t\t\tadd.tspan(' ');\r\n\r\n\t\t\tif (value.type !== 'any') {\r\n\t\t\t\t// if attribute has type\r\n\t\t\t\tadd.tspan(' : ');\r\n\t\t\t\tadd.tspan(capitalizeFirst(value.type) + ' ').font(attr_style.type);\t\t// add attribute's type\r\n\t\t\t}\r\n\r\n\t\t\tif (value.value) {\r\n\t\t\t\t// if attribute has value\r\n\r\n\t\t\t\tadd.tspan('=').font(attr_style.symbol);\t\t// add '='\r\n\t\t\t\tadd.tspan(' ');\r\n\r\n\t\t\t\tif (value.type === 'string') {\r\n\t\t\t\t\t// if value's type is string, apply specific stypes\r\n\t\t\t\t\tadd.tspan('\"' + value.value + '\"').font(merge(attr_style.value.common, attr_style.value.string));\r\n\r\n\t\t\t\t} else if (value.type === 'int') {\r\n\t\t\t\t\t// the same kind of action for integers\r\n\t\t\t\t\tadd.tspan(value.value).font(merge(attr_style.value.common, attr_style.value.integer));\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// any other value\r\n\t\t\t\t\tadd.tspan(value.value).font(attr_style.value.common);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}).font(attr_style.common);\t\t// apply general font style\r\n}\r\n\r\nexport function addMethods(element, text, style) {\r\n\t// - string getFoo(\r\n\t// \t\tbar: int,\r\n\t// \t\tfoo: string = \"hello\")\r\n\tlet method_style = style.method;\r\n\tlet attr_style = style.attribute;\t// needed to apply to passed parameters\r\n\r\n\treturn element.text(function (add) {\r\n\t\tfor (let name in text) {\r\n\t\t\tlet value = text[name];\r\n\r\n\t\t\tadd.tspan(getScopeSymbol(value.scope)).font(method_style.scope).newLine();\t// add scope symbol\r\n\t\t\tadd.tspan(' ');\r\n\r\n\t\t\tif (value.type !== 'any') {\r\n\t\t\t\tadd.tspan(capitalizeFirst(value.type)).font(method_style.type);\t// add returned value type if needed\r\n\t\t\t\tadd.tspan(' ');\r\n\t\t\t}\r\n\t\t\tadd.tspan(value.name).font(method_style.name);\t// add method name\r\n\t\t\tadd.tspan(' ');\r\n\r\n\t\t\tif (value.args) {\t// if method has arguments\r\n\r\n\t\t\t\tadd.tspan('(').font(method_style.name);\t\t// open the bracket\r\n\r\n\t\t\t\tfor (let arg in value.args) {\r\n\t\t\t\t\t// get one argument\r\n\r\n\t\t\t\t\tlet argument = value.args[arg];\r\n\t\t\t\t\tlet arg_style = attr_style;\r\n\r\n\t\t\t\t\tadd.tspan(argument.name)\t// add argument name\r\n\t\t\t\t\t\t.font(arg_style.name)\r\n\t\t\t\t\t\t.font(method_style.passed)\t// override the style with special style for passed argument\r\n\t\t\t\t\t\t.newLine()\t// each passed argument should start with newline\r\n\t\t\t\t\t\t.dx(20);\t// ident\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (argument.type !== 'any') {\r\n\t\t\t\t\t\tadd.tspan(' : ').font(method_style.passed);\r\n\t\t\t\t\t\tadd.tspan(capitalizeFirst(argument.type))\t// add argument data type\r\n\t\t\t\t\t\t\t.font(arg_style.type)\r\n\t\t\t\t\t\t\t.font(method_style.passed);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (argument.value !== '') {\r\n\t\t\t\t\t\tadd.tspan(' ').font(method_style.passed);\r\n\t\t\t\t\t\tadd.tspan('=').font(arg_style.symbol).font(method_style.passed);\t// add '='\r\n\t\t\t\t\t\tadd.tspan(' ').font(method_style.passed);;\r\n\r\n\t\t\t\t\t\tif (argument.type === 'string') {\t// add default value just like we do it in attributes\r\n\r\n\t\t\t\t\t\t\tadd.tspan('\"' + argument.value + '\"')\r\n\t\t\t\t\t\t\t\t.font(merge(arg_style.value.common, arg_style.value.string))\r\n\t\t\t\t\t\t\t\t.font(method_style.passed);\r\n\r\n\t\t\t\t\t\t} else if (argument.type === 'int') {\r\n\r\n\t\t\t\t\t\t\tadd.tspan(argument.value)\r\n\t\t\t\t\t\t\t\t.font(merge(arg_style.value.common, arg_style.value.integer))\r\n\t\t\t\t\t\t\t\t.font(method_style.passed);\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tadd.tspan(argument.value)\r\n\t\t\t\t\t\t\t\t.font(arg_style.value.common)\r\n\t\t\t\t\t\t\t\t.font(method_style.passed);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (arg < value.args.length - 1) {\r\n\t\t\t\t\t\tadd.tspan(',')\r\n\t\t\t\t\t\t\t.font(arg_style.common)\r\n\t\t\t\t\t\t\t.font(method_style.passed);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tadd.tspan(')').font(method_style.name);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// otherwise just close the method with ()\r\n\t\t\t\tadd.tspan('()').font(method_style.name);\r\n\t\t\t}\r\n\t\t}\r\n\t}).font(method_style.common);\r\n}\r\n\r\nfunction getScopeSymbol(scope) {\r\n\tswitch (scope.toLowerCase()) {\r\n\t\tcase 'public':\r\n\t\t\treturn '+';\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'private':\r\n\t\t\treturn '-';\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'protected':\r\n\t\t\treturn '#';\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'derived':\r\n\t\t\treturn '/';\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'package':\r\n\t\t\treturn '~';\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tthrow new TypeError('Unknown scope: ' + scope);\r\n\t}\r\n}\r\n\r\nfunction capitalizeFirst(word) {\r\n\treturn word.slice(0, 1).toUpperCase() + word.slice(1).toLowerCase();\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/element/text.js\n// module id = 7\n// module chunks = 0","'use strict';\r\n\r\nexport let class_theme = {\r\n\trect_style: {\r\n\t\t'padding': '11 11',\r\n\t\t'border-color': 'black',\r\n\t\t'border-width': '2',\r\n\t\t'border-radius': '4',\r\n\t\t'background-color': 'white'\r\n\t},\r\n\ttext_style: {\r\n\t\tcommon: {\r\n\t\t\t// styles applied to overall text\r\n\t\t\t'color': 'black',\r\n\t\t\t'font-family': 'Verdana, sans-serif',\r\n\t\t\t'font-size': '12',\r\n\t\t\t'line-height': '1.25',\r\n\t\t\t'font-style': 'normal',\r\n\t\t\t'font-weight': 'normal',\r\n\t\t\t'text-align': 'left'\r\n\t\t},\r\n\t\tnode: {\r\n\t\t\tcommon: {\r\n\t\t\t},\r\n\t\t\tname: {\r\n\t\t\t\t'font-weight': 'bold'\r\n\t\t\t},\r\n\t\t\ttype: {\r\n\t\t\t\t// for example, <<interface>>\r\n\t\t\t\t'font-style': 'italic',\r\n\t\t\t\t'font-size': '9'\r\n\t\t\t}\r\n\t\t},\r\n\t\tattribute: {\r\n\t\t\tcommon: {\r\n\t\t\t\t// styles applied to overall attributes\r\n\t\t\t},\r\n\t\t\tscope: {\r\n\t\t\t\t// +, -, /, ~ and so on\r\n\t\t\t\t'font-family': 'Courier New, monospace',\r\n\t\t\t\t'color': '#B90690'\r\n\t\t\t},\r\n\t\t\tname: {\r\n\r\n\t\t\t},\r\n\t\t\ttype: {\r\n\t\t\t\t'color': 'blue',\r\n\t\t\t\t'font-style': 'italic'\r\n\t\t\t},\r\n\t\t\tsymbol: {\r\n\t\t\t\t// '=' if there is default value\r\n\t\t\t},\r\n\t\t\tvalue: {\r\n\t\t\t\tcommon: {\r\n\t\t\t\t\t'color': 'blue'\r\n\t\t\t\t},\r\n\t\t\t\tstring: {\r\n\t\t\t\t\t'color': '#036A07'\r\n\t\t\t\t},\r\n\t\t\t\tinteger: {\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethod: {\r\n\t\t\tcommon: {\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tscope: {\r\n\t\t\t\t'font-family': 'Courier New, monospace',\r\n\t\t\t\t'color': '#B90690'\r\n\t\t\t},\r\n\t\t\ttype: {\r\n\t\t\t\t'color': 'blue'\r\n\t\t\t},\r\n\t\t\tname: {\r\n\t\t\t\t'color': '#0000A2',\r\n\t\t\t},\r\n\t\t\tpassed: {\r\n\t\t\t\t// these styles will override everything applied to passed agruments\r\n\t\t\t\t// 'color': 'dimgrey'\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tline_style: {\r\n\t\t\r\n\t}\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/theme/model.js\n// module id = 8\n// module chunks = 0"],"sourceRoot":""}